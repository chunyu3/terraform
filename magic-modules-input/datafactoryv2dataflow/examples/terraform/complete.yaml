--- !ruby/object:Provider::Azure::Example
resource: azurerm_data_flow
prerequisites:
  - !ruby/object:Provider::Azure::ExampleReference
    product: resourcegroup
    example: basic
  - !ruby/object:Provider::Azure::ExampleReference
    product: factory
    example: basic
  - !ruby/object:Provider::Azure::ExampleReference
    product: dataflow
    example: basic
properties:
  resource_group_name: '${azurerm_resource_group.<%= resource_id_hint -%>.name}'
  factory_name: exampleFactoryName
  name: '<%= get_resource_name('''', ''datafactoryv2dataflow'') -%>'
  data_flow:
    properties:
      description: >-
        Sample demo data flow to convert currencies showing usage of union,
        derive and conditional split transformation.
      type: MappingDataFlow
      typeProperties:
        sources:
          - dataset:
              referenceName: CurrencyDatasetUSD
              type: DatasetReference
            name: USDCurrency
          - dataset:
              referenceName: CurrencyDatasetCAD
              type: DatasetReference
            name: CADSource
        sinks:
          - dataset:
              referenceName: USDOutput
              type: DatasetReference
            name: USDSink
          - dataset:
              referenceName: CADOutput
              type: DatasetReference
            name: CADSink
        script: >-
          source(output(PreviousConversionRate as double,Country as
          string,DateTime1 as string,CurrentConversionRate as
          double),allowSchemaDrift: false,validateSchema: false) ~> USDCurrency

          source(output(PreviousConversionRate as double,Country as
          string,DateTime1 as string,CurrentConversionRate as
          double),allowSchemaDrift: true,validateSchema: false) ~> CADSource

          USDCurrency, CADSource union(byName: true)~> Union

          Union derive(NewCurrencyRate = round(CurrentConversionRate*1.25)) ~>
          NewCurrencyColumn

          NewCurrencyColumn split(Country == 'USD',Country == 'CAD',disjoint:
          false) ~> ConditionalSplit1@(USD, CAD)

          ConditionalSplit1@USD sink(saveMode:'overwrite' ) ~> USDSink

          ConditionalSplit1@CAD sink(saveMode:'overwrite' ) ~> CADSink
