--- !ruby/object:Provider::Ansible::Example
task: !ruby/object:Provider::Ansible::Task
  name: azure_rm_datafactoryv2dataflow
  description: DataFlows_Create
  code:
    resource_group: myResourceGroup
    factory_name: myFactory
    data_flow_name: myDataflow
    data_flow:
      properties:
        description: >-
          Sample demo data flow to convert currencies showing usage of union,
          derive and conditional split transformation.
        type: MappingDataFlow
        typeProperties:
          sources:
            - dataset:
                referenceName: CurrencyDatasetUSD
                type: DatasetReference
              name: USDCurrency
            - dataset:
                referenceName: CurrencyDatasetCAD
                type: DatasetReference
              name: CADSource
          sinks:
            - dataset:
                referenceName: USDOutput
                type: DatasetReference
              name: USDSink
            - dataset:
                referenceName: CADOutput
                type: DatasetReference
              name: CADSink
          script: >-
            source(output(PreviousConversionRate as double,Country as
            string,DateTime1 as string,CurrentConversionRate as
            double),allowSchemaDrift: false,validateSchema: false) ~> USDCurrency
  
            source(output(PreviousConversionRate as double,Country as
            string,DateTime1 as string,CurrentConversionRate as
            double),allowSchemaDrift: true,validateSchema: false) ~> CADSource
  
            USDCurrency, CADSource union(byName: true)~> Union
  
            Union derive(NewCurrencyRate = round(CurrentConversionRate*1.25)) ~>
            NewCurrencyColumn
  
            NewCurrencyColumn split(Country == 'USD',Country == 'CAD',disjoint:
            false) ~> ConditionalSplit1@(USD, CAD)
  
            ConditionalSplit1@USD sink(saveMode:'overwrite' ) ~> USDSink
  
            ConditionalSplit1@CAD sink(saveMode:'overwrite' ) ~> CADSink
  