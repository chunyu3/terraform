--- !ruby/object:Api::Product
name: Azure BlobContainer Management
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: NotUsedInAzure
scopes:
  - NotUsedInAzure
objects:
  - !ruby/object:Api::Resource
    name: BlobContainer
    api_name: Storage
    base_url: NotUsedInAzure

    azure_sdk_definition: !ruby/object:Api::Azure::SDKDefinition
      provider_name: Microsoft.Storage
      go_client_namespace: storage
      go_client: blobContainersClient
      python_client_namespace: azure.mgmt.storage
      python_client: StorageManagementClient.blob_containers
      create: !ruby/object:Api::Azure::SDKOperationDefinition
        go_func_name: Create
        python_func_name: create
        request:
          'resourceGroupName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: resourceGroups
            go_variable_name: resourceGroup
            python_parameter_name: resource_group_name
            python_variable_name: resource_group
          'accountName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: storageAccounts
            go_variable_name: accountName
            python_parameter_name: account_name
            python_variable_name: account_name
          'containerName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: containers
            go_variable_name: name
            python_parameter_name: container_name
            python_variable_name: name
          '/': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            go_variable_name: blobContainer
            go_type_name: BlobContainer
            python_parameter_name: blob_container
            python_variable_name: blob_container
          '/properties': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [go]
            go_field_name: ContainerProperties
            go_type_name: ContainerProperties
          '/publicAccess': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [python]
            python_field_name: public_access
          '/properties/publicAccess': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [go]
            go_field_name: PublicAccess
            go_enum_type_name: PublicAccess
          '/metadata': !ruby/object:Api::Azure::SDKTypeDefinition::StringMapObject
            applicable_to: [python]
            python_field_name: metadata
          '/properties/metadata': !ruby/object:Api::Azure::SDKTypeDefinition::StringMapObject
            applicable_to: [go]
            go_field_name: Metadata
      update: !ruby/object:Api::Azure::SDKOperationDefinition
        go_func_name: Update
        python_func_name: update
        request:
          'resourceGroupName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: resourceGroups
            go_variable_name: resourceGroup
            python_parameter_name: resource_group_name
            python_variable_name: resource_group
          'accountName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: storageAccounts
            go_variable_name: accountName
            python_parameter_name: account_name
            python_variable_name: account_name
          'containerName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: containers
            go_variable_name: name
            python_parameter_name: container_name
            python_variable_name: name
          '/': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            go_variable_name: blobContainer
            go_type_name: BlobContainer
            python_parameter_name: blob_container
            python_variable_name: blob_container
          '/properties': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [go]
            go_field_name: ContainerProperties
            go_type_name: ContainerProperties
          '/publicAccess': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [python]
            python_field_name: public_access
          '/properties/publicAccess': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [go]
            go_field_name: PublicAccess
            go_enum_type_name: PublicAccess
          '/metadata': !ruby/object:Api::Azure::SDKTypeDefinition::StringMapObject
            applicable_to: [python]
            python_field_name: metadata
          '/properties/metadata': !ruby/object:Api::Azure::SDKTypeDefinition::StringMapObject
            applicable_to: [go]
            go_field_name: Metadata
      delete: !ruby/object:Api::Azure::SDKOperationDefinition
        go_func_name: Delete
        python_func_name: delete
        request:
          'resourceGroupName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: resourceGroups
            go_variable_name: resourceGroup
            python_parameter_name: resource_group_name
            python_variable_name: resource_group
          'accountName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: storageAccounts
            go_variable_name: accountName
            python_parameter_name: account_name
            python_variable_name: account_name
          'containerName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: containers
            go_variable_name: name
            python_parameter_name: container_name
            python_variable_name: name
      read: !ruby/object:Api::Azure::SDKOperationDefinition
        go_func_name: Get
        python_func_name: get
        request:
          'resourceGroupName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: resourceGroups
            go_variable_name: resourceGroup
            python_parameter_name: resource_group_name
            python_variable_name: resource_group
          'accountName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: storageAccounts
            go_variable_name: accountName
            python_parameter_name: account_name
            python_variable_name: account_name
          'containerName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: containers
            go_variable_name: name
            python_parameter_name: container_name
            python_variable_name: name
        response:
          '/properties': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [go]
            go_field_name: ContainerProperties
            go_type_name: ContainerProperties
          '/properties/publicAccess': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [go]
            go_field_name: PublicAccess
            go_enum_type_name: PublicAccess
          '/publicAccess': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [python]
            python_field_name: public_access
          '/properties/metadata': !ruby/object:Api::Azure::SDKTypeDefinition::StringMapObject
            applicable_to: [go]
            go_field_name: Metadata
          '/metadata': !ruby/object:Api::Azure::SDKTypeDefinition::StringMapObject
            applicable_to: [python]
            python_field_name: metadata
          '/properties/lastModifiedTime': !ruby/object:Api::Azure::SDKTypeDefinition::ISO8601DateTimeObject
            applicable_to: [go]
            go_field_name: LastModifiedTime
          '/lastModifiedTime': !ruby/object:Api::Azure::SDKTypeDefinition::ISO8601DateTimeObject
            applicable_to: [python]
            python_field_name: last_modified_time
          '/properties/leaseStatus': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [go]
            go_field_name: LeaseStatus
            go_enum_type_name: LeaseStatus
          '/leaseStatus': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [python]
            python_field_name: lease_status
          '/properties/leaseState': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [go]
            go_field_name: LeaseState
            go_enum_type_name: LeaseState
          '/leaseState': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [python]
            python_field_name: lease_state
          '/properties/leaseDuration': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [go]
            go_field_name: LeaseDuration
            go_enum_type_name: LeaseDuration
          '/leaseDuration': !ruby/object:Api::Azure::SDKTypeDefinition::EnumObject
            applicable_to: [python]
            python_field_name: lease_duration
          '/properties/immutabilityPolicy': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [go]
            go_field_name: ImmutabilityPolicy
            go_type_name: ImmutabilityPolicyProperties
          '/immutabilityPolicy': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [python]
            python_field_name: immutability_policy
          '/properties/legalHold': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [go]
            go_field_name: LegalHold
            go_type_name: LegalHoldProperties
          '/legalHold': !ruby/object:Api::Azure::SDKTypeDefinition::ComplexObject
            applicable_to: [python]
            python_field_name: legal_hold
          '/properties/hasLegalHold': !ruby/object:Api::Azure::SDKTypeDefinition::BooleanObject
            applicable_to: [go]
            go_field_name: HasLegalHold
          '/hasLegalHold': !ruby/object:Api::Azure::SDKTypeDefinition::BooleanObject
            applicable_to: [python]
            python_field_name: has_legal_hold
          '/properties/hasImmutabilityPolicy': !ruby/object:Api::Azure::SDKTypeDefinition::BooleanObject
            applicable_to: [go]
            go_field_name: HasImmutabilityPolicy
          '/hasImmutabilityPolicy': !ruby/object:Api::Azure::SDKTypeDefinition::BooleanObject
            applicable_to: [python]
            python_field_name: has_immutability_policy
          '/id': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            go_field_name: ID
            python_field_name: id
          '/name': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            go_field_name: Name
            python_field_name: name
          '/type': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            go_field_name: Type
            python_field_name: type
          '/etag': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            go_field_name: Etag
            python_field_name: etag
      list_by_parent: !ruby/object:Api::Azure::SDKOperationDefinition
        go_func_name: List
        python_func_name: list
        request:
          'resourceGroupName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: resourceGroups
            go_variable_name: resourceGroup
            python_parameter_name: resource_group_name
            python_variable_name: resource_group
          'accountName': !ruby/object:Api::Azure::SDKTypeDefinition::StringObject
            id_portion: storageAccounts
            go_variable_name: accountName
            python_parameter_name: account_name
            python_variable_name: account_name

    description: |
      Manage Azure BlobContainer instance.
    properties:
      - !ruby/object:Api::Azure::Type::ResourceGroupName
        name: 'resourceGroup'
        description: 'The name of the resource group within the user''s subscription. The name is case insensitive.'
        required: true
        input: true
        azure_sdk_references: ['resourceGroupName']
      - !ruby/object:Api::Type::String
        name: 'accountName'
        description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.'
        required: true
        input: true
        azure_sdk_references: ['accountName']
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.'
        required: true
        input: true
        azure_sdk_references: ['containerName']
      - !ruby/object:Api::Type::Enum
        name: 'publicAccess'
        description: 'Specifies whether data in the container may be accessed publicly and the level of access.'
        required: false
        azure_sdk_references: ['/publicAccess', '/properties/publicAccess']
        values:
          - :Container
          - :Blob
          - :None
        default_value: :Container
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'metadata'
        description: 'A name-value pair to associate with the container as metadata.'
        required: false
        azure_sdk_references: ['/metadata', '/properties/metadata']
      # read only values included only in response
      - !ruby/object:Api::Azure::Type::ISO8601DateTime
        name: 'lastModifiedTime'
        description: 'Returns the date and time the container was last modified.'
        output: true
        azure_sdk_references: ['/lastModifiedTime', '/properties/lastModifiedTime']
      - !ruby/object:Api::Type::Enum
        name: 'leaseStatus'
        description: 'The lease status of the container.'
        output: true
        azure_sdk_references: ['/leaseStatus', '/properties/leaseStatus']
        values:
          - :Locked
          - :Unlocked
      - !ruby/object:Api::Type::Enum
        name: 'leaseState'
        description: 'Lease state of the container.'
        output: true
        azure_sdk_references: ['/leaseState', '/properties/leaseState']
        values:
          - :Available
          - :Leased
          - :Expired
          - :Breaking
          - :Broken
      - !ruby/object:Api::Type::Enum
        name: 'leaseDuration'
        description: 'Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.'
        output: true
        azure_sdk_references: ['/leaseDuration', '/properties/leaseDuration']
        values:
          - :Infinite
          - :Fixed
      - !ruby/object:Api::Type::NestedObject
        name: 'immutabilityPolicy'
        description: 'The ImmutabilityPolicy property of the container.'
        output: true
        azure_sdk_references: ['/immutabilityPolicy', '/properties/immutabilityPolicy']
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'immutabilityPeriodSinceCreationInDays'
            description: 'The immutability period for the blobs in the container since the policy creation, in days.'
            required: true
            azure_sdk_references: ['/immutabilityPolicy/immutabilityPeriodSinceCreationInDays', '/properties/immutabilityPolicy/properties/immutabilityPeriodSinceCreationInDays']
          - !ruby/object:Api::Type::Enum
            name: 'state'
            description: 'The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.'
            required: false
            azure_sdk_references: ['/immutabilityPolicy/state', '/properties/immutabilityPolicy/properties/state']
            values:
              - :Locked
              - :Unlocked
            default_value: :Locked
          - !ruby/object:Api::Type::String
            name: 'etag'
            description: 'ImmutabilityPolicy Etag.'
            required: false
            azure_sdk_references: ['/immutabilityPolicy/etag', '/properties/immutabilityPolicy/etag']
          - !ruby/object:Api::Type::Array
            name: 'updateHistory'
            description: 'The ImmutabilityPolicy update history of the blob container.'
            required: false
            azure_sdk_references: ['/immutabilityPolicy/updateHistory', '/properties/immutabilityPolicy/updateHistory']
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::Enum
                  name: 'update'
                  description: 'The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.'
                  required: false
                  azure_sdk_references: ['/immutabilityPolicy/updateHistory/update', '/properties/immutabilityPolicy/updateHistory/update']
                  values:
                    - :put
                    - :lock
                    - :extend
                  default_value: :put
                - !ruby/object:Api::Type::Integer
                  name: 'immutabilityPeriodSinceCreationInDays'
                  description: 'The immutability period for the blobs in the container since the policy creation, in days.'
                  required: false
                  azure_sdk_references: ['/immutabilityPolicy/updateHistory/immutabilityPeriodSinceCreationInDays', '/properties/immutabilityPolicy/updateHistory/immutabilityPeriodSinceCreationInDays']
                - !ruby/object:Api::Azure::Type::ISO8601DateTime
                  name: 'timestamp'
                  description: 'Returns the date and time the ImmutabilityPolicy was updated.'
                  required: false
                  azure_sdk_references: ['/immutabilityPolicy/updateHistory/timestamp', '/properties/immutabilityPolicy/updateHistory/timestamp']
                - !ruby/object:Api::Type::String
                  name: 'objectIdentifier'
                  description: 'Returns the Object ID of the user who updated the ImmutabilityPolicy.'
                  required: false
                  azure_sdk_references: ['/immutabilityPolicy/updateHistory/objectIdentifier', '/properties/immutabilityPolicy/updateHistory/objectIdentifier']
                - !ruby/object:Api::Type::String
                  name: 'tenantId'
                  description: 'Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.'
                  required: false
                  azure_sdk_references: ['/immutabilityPolicy/updateHistory/tenantId', '/properties/immutabilityPolicy/updateHistory/tenantId']
                - !ruby/object:Api::Type::String
                  name: 'upn'
                  description: 'Returns the User Principal Name of the user who updated the ImmutabilityPolicy.'
                  required: false
                  azure_sdk_references: ['/immutabilityPolicy/updateHistory/upn', '/properties/immutabilityPolicy/updateHistory/upn']
      - !ruby/object:Api::Type::NestedObject
        name: 'legalHold'
        description: 'The LegalHold property of the container.'
        output: true
        azure_sdk_references: ['/legalHold', '/properties/legalHold']
        properties:
          - !ruby/object:Api::Type::Boolean
            name: 'hasLegalHold'
            description: 'The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.'
            required: false
            azure_sdk_references: ['/legalHold/hasLegalHold', '/properties/legalHold/hasLegalHold']
          - !ruby/object:Api::Type::Array
            name: 'tags'
            description: 'The list of LegalHold tags of a blob container.'
            required: false
            azure_sdk_references: ['/legalHold/tags', '/properties/legalHold/tags']
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'tag'
                  description: 'The tag value.'
                  required: false
                  azure_sdk_references: ['/legalHold/tags/tag', '/properties/legalHold/tags/tag']
                - !ruby/object:Api::Azure::Type::ISO8601DateTime
                  name: 'timestamp'
                  description: 'Returns the date and time the tag was added.'
                  required: false
                  azure_sdk_references: ['/legalHold/tags/timestamp', '/properties/legalHold/tags/timestamp']
                - !ruby/object:Api::Type::String
                  name: 'objectIdentifier'
                  description: 'Returns the Object ID of the user who added the tag.'
                  required: false
                  azure_sdk_references: ['/legalHold/tags/objectIdentifier', '/properties/legalHold/tags/objectIdentifier']
                - !ruby/object:Api::Type::String
                  name: 'tenantId'
                  description: 'Returns the Tenant ID that issued the token for the user who added the tag.'
                  required: false
                  azure_sdk_references: ['/legalHold/tags/tenantId', '/properties/legalHold/tags/tenantId']
                - !ruby/object:Api::Type::String
                  name: 'upn'
                  description: 'Returns the User Principal Name of the user who added the tag.'
                  required: false
                  azure_sdk_references: ['/legalHold/tags/upn', '/properties/legalHold/tags/upn']
      - !ruby/object:Api::Type::Boolean
        name: 'hasLegalHold'
        description: 'The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.'
        output: true
        azure_sdk_references: ['/hasLegalHold', '/properties/hasLegalHold']
      - !ruby/object:Api::Type::Boolean
        name: 'hasImmutabilityPolicy'
        description: 'The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.'
        output: true
        azure_sdk_references: ['/hasImmutabilityPolicy', '/properties/hasImmutabilityPolicy']
      - !ruby/object:Api::Type::String
        name: 'id'
        description: 'Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'
        output: true
        azure_sdk_references: ['/id']
      - !ruby/object:Api::Type::String
        name: 'name'
        description: 'The name of the resource'
        output: true
        azure_sdk_references: ['/name']
      - !ruby/object:Api::Type::String
        name: 'type'
        description: 'The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.'
        output: true
        azure_sdk_references: ['/type']
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: 'Resource Etag.'
        output: true
        azure_sdk_references: ['/etag']