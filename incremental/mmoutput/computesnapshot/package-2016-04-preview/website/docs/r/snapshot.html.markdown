---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_snapshot"
sidebar_current: "docs-azurerm-resource-snapshot"
description: |-
  Manage Azure Snapshot instance.
---

# azurerm_snapshot

Manage Azure Snapshot instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the snapshot within the given subscription and resource group. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `location` - (Required) Resource location Changing this forces a new resource to be created.

* `access` - (Required)  Changing this forces a new resource to be created.

* `duration_in_seconds` - (Required) Time duration in seconds until the SAS access expires. Changing this forces a new resource to be created.

* `account_type` - (Optional) the storage account type of the disk. Defaults to `Standard_LRS`.

* `creation_data` - (Optional) One `creation_datum` block defined below.

* `disk_size_gb` - (Optional) If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.

* `encryption_settings` - (Optional) One `encryption_setting` block defined below.

* `os_type` - (Optional) the Operating System type. Defaults to `Windows`.

* `tags` - (Optional) Resource tags Changing this forces a new resource to be created.

---

The `creation_datum` block supports the following:

* `create_option` - (Required) This enumerates the possible sources of a disk's creation.

* `storage_account_id` - (Optional) If createOption is Import, the Azure Resource Manager identifier of the storage account containing the blob to import as a disk. Required only if the blob is in a different subscription

* `image_reference` - (Optional) One `image_reference` block defined below.

* `source_uri` - (Optional) If createOption is Import, this is a SAS URI to a blob to be imported into a managed disk. If createOption is Copy, this is a relative Uri containing the id of the source snapshot to be copied into a managed disk.

* `source_resource_id` - (Optional) If createOption is Copy, this is the ARM id of the source snapshot or disk. If createOption is Restore, this is the ARM-like id of the source disk restore point.


---

The `image_reference` block supports the following:

* `id` - (Required) A relative uri containing either a Platform Image Repository or user image reference.

* `lun` - (Optional) If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.

---

The `encryption_setting` block supports the following:

* `enabled` - (Optional) Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.

* `disk_encryption_key` - (Optional) One `disk_encryption_key` block defined below.

* `key_encryption_key` - (Optional) One `key_encryption_key` block defined below.


---

The `disk_encryption_key` block supports the following:

* `source_vault` - (Required) One `source_vault` block defined below.

* `secret_url` - (Required) Url pointing to a key or secret in KeyVault


---

The `source_vault` block supports the following:

* `id` - (Optional) Resource Id

---

The `key_encryption_key` block supports the following:

* `source_vault` - (Required) One `source_vault` block defined below.

* `key_url` - (Required) Url pointing to a key or secret in KeyVault


---

The `source_vault` block supports the following:

* `id` - (Optional) Resource Id

## Attributes Reference

The following attributes are exported:

* `id` - Resource Id

* `name` - Resource name

* `type` - Resource type
