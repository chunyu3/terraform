---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_application"
sidebar_current: "docs-azurerm-resource-application"
description: |-
  Manage Azure Application instance.
---

# azurerm_application

Manage Azure Application instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The identity of the application. Changing this forces a new resource to be created.

* `resource_group` - (Required) Azure resource group name Changing this forces a new resource to be created.

* `location` - (Optional) The geo-location where the resource lives Changing this forces a new resource to be created.

* `debug_params` - (Optional) Internal use.

* `description` - (Optional) User readable description of the application.

* `diagnostics` - (Optional) One `diagnostic` block defined below.

* `services` - (Optional) One or more `service` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `diagnostic` block supports the following:

* `sinks` - (Optional) One or more `sink` block defined below.

* `enabled` - (Optional) Status of whether or not sinks are enabled.

* `default_sink_refs` - (Optional) The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.


---

The `sink` block supports the following:

* `name` - (Optional) Name of the sink. This value is referenced by DiagnosticsReferenceDescription

* `description` - (Optional) A description of the sink.

---

The `service` block supports the following:

* `name` - (Optional) The name of the resource

* `os_type` - (Required) The Operating system type required by the code in service.<br>

* `code_packages` - (Required) One or more `code_package` block defined below.

* `network_refs` - (Optional) One or more `network_ref` block defined below.

* `diagnostics` - (Optional) One `diagnostic` block defined below.

* `description` - (Optional) User readable description of the service.

* `replica_count` - (Optional) The number of replicas of the service to create. Defaults to 1 if not specified.

* `health_state` - (Optional) The health state of a resource such as Application, Service, or Network. Defaults to `Invalid`.


---

The `code_package` block supports the following:

* `name` - (Required) The name of the code package.

* `image` - (Required) The Container image to use.

* `entrypoint` - (Optional) Override for the default entry point in the container.

* `commands` - (Optional) Command array to execute within the container in exec form.

---

The `network_ref` block supports the following:

* `name` - (Optional) Name of the network.

---

The `diagnostic` block supports the following:

* `enabled` - (Optional) Status of whether or not sinks are enabled.

* `sink_refs` - (Optional) List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - State of the resource.

* `health_state` - Describes the health state of an application resource.

* `unhealthy_evaluation` - When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.

* `status` - Status of the application resource.

* `status_details` - Gives additional information about the current status of the application deployment.

* `service_names` - Names of the services in the application.

* `id` - Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}

* `name` - The name of the resource

* `type` - The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
