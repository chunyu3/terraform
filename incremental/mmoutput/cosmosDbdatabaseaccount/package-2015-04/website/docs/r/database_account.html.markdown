---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_database_account"
sidebar_current: "docs-azurerm-resource-database-account"
description: |-
  Manage Azure DatabaseAccount instance.
---

# azurerm_database_account

Manage Azure DatabaseAccount instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) Cosmos DB database account name. Changing this forces a new resource to be created.

* `resource_group` - (Required) Name of an Azure resource group. Changing this forces a new resource to be created.

* `database_account_offer_type` - (Required) The offer type for the database

* `locations` - (Required) One or more `location` block defined below.

---

The `location` block supports the following:

* `location_name` - (Optional) The name of the region.

* `failover_priority` - (Optional) The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.

* `is_zone_redundant` - (Optional) Flag to indicate whether or not this region is an AvailabilityZone region

* `location` - (Optional) The location of the resource group to which the resource belongs. Changing this forces a new resource to be created.

* `capabilities` - (Optional) One or more `capability` block defined below.

* `connector_offer` - (Optional) The cassandra connector offer type for the Cosmos DB database C* account. Defaults to `Small`.

* `consistency_policy` - (Optional) One `consistency_policy` block defined below.

* `enable_automatic_failover` - (Optional) Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.

* `enable_cassandra_connector` - (Optional) Enables the cassandra connector on the Cosmos DB C* account

* `enable_multiple_write_locations` - (Optional) Enables the account to write in multiple locations

* `ip_range_filter` - (Optional) Cosmos DB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.

* `is_virtual_network_filter_enabled` - (Optional) Flag to indicate whether to enable/disable Virtual Network ACL rules.

* `kind` - (Optional) Indicates the type of database account. This can only be set at database account creation. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.

* `virtual_network_rules` - (Optional) One or more `virtual_network_rule` block defined below.

* `tags` - (Optional)  Changing this forces a new resource to be created.

---

The `capability` block supports the following:

* `name` - (Optional) Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".

---

The `consistency_policy` block supports the following:

* `default_consistency_level` - (Required) The default consistency level and configuration settings of the Cosmos DB account.

* `max_staleness_prefix` - (Optional) When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 â€“ 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.

* `max_interval_in_seconds` - (Optional) When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.

---

The `virtual_network_rule` block supports the following:

* `id` - (Optional) Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.

* `ignore_missing_vnet_service_endpoint` - (Optional) Create firewall rule before the virtual network has vnet service endpoint enabled.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - 

* `document_endpoint` - The connection endpoint for the Cosmos DB database account.

* `write_locations` - One or more `write_location` block defined below.

* `read_locations` - One or more `read_location` block defined below.

* `failover_policies` - One or more `failover_policy` block defined below.

* `id` - The unique resource identifier of the database account.

* `name` - The name of the database account.

* `type` - The type of Azure resource.


---

The `write_location` block contains the following:

* `id` - (Optional) The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.

* `location_name` - (Optional) The name of the region.

* `document_endpoint` - (Optional) The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/

* `provisioning_state` - (Optional) 

* `failover_priority` - (Optional) The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.

* `is_zone_redundant` - (Optional) Flag to indicate whether or not this region is an AvailabilityZone region

---

The `read_location` block contains the following:

* `id` - (Optional) The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.

* `location_name` - (Optional) The name of the region.

* `document_endpoint` - (Optional) The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/

* `provisioning_state` - (Optional) 

* `failover_priority` - (Optional) The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.

* `is_zone_redundant` - (Optional) Flag to indicate whether or not this region is an AvailabilityZone region

---

The `failover_policy` block contains the following:

* `id` - (Optional) The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.

* `location_name` - (Optional) The name of the region in which the database account exists.

* `failover_priority` - (Optional) The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
