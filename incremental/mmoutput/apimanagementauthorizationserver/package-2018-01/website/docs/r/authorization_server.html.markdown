---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_authorization_server"
sidebar_current: "docs-azurerm-resource-authorization-server"
description: |-
  Manage Azure AuthorizationServer instance.
---

# azurerm_authorization_server

Manage Azure AuthorizationServer instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the API Management service. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `authorization_endpoint` - (Required) OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.

* `authsid` - (Required) Identifier of the authorization server. Changing this forces a new resource to be created.

* `client_id` - (Required) Client or app id registered with this authorization server.

* `client_registration_endpoint` - (Required) Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.

* `display_name` - (Required) User-friendly authorization server name.

* `grant_types` - (Required) Form of an authorization grant, which the client uses to request the access token.

* `authorization_methods` - (Optional) HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.

* `bearer_token_sending_methods` - (Optional) Specifies the mechanism by which access token is passed to the API.

* `client_authentication_method` - (Optional) Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.

* `client_secret` - (Optional) Client or app secret registered with this authorization server.

* `default_scope` - (Optional) Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.

* `description` - (Optional) Description of the authorization server. Can contain HTML formatting tags.

* `resource_owner_password` - (Optional) Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.

* `resource_owner_username` - (Optional) Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.

* `support_state` - (Optional) If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.

* `token_body_parameters` - (Optional) One or more `token_body_parameter` block defined below.

* `token_endpoint` - (Optional) OAuth token endpoint. Contains absolute URI to entity being referenced.

---

The `token_body_parameter` block supports the following:

* `name` - (Required) body parameter name.

* `value` - (Required) body parameter value.

## Attributes Reference

The following attributes are exported:

* `id` - Resource ID.

* `name` - Resource name.

* `type` - Resource type for API Management resource.
