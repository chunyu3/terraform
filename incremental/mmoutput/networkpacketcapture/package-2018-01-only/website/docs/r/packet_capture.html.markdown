---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_packet_capture"
sidebar_current: "docs-azurerm-resource-packet-capture"
description: |-
  Manage Azure PacketCapture instance.
---

# azurerm_packet_capture

Manage Azure PacketCapture instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the packet capture session. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `network_watcher_name` - (Required) The name of the network watcher. Changing this forces a new resource to be created.

* `storage_location` - (Required) One `storage_location` block defined below.

* `target` - (Required) The ID of the targeted resource, only VM is currently supported.

---

The `storage_location` block supports the following:

* `storage_id` - (Optional) The ID of the storage account to save the packet capture session. Required if no local file path is provided.

* `storage_path` - (Optional) The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.

* `file_path` - (Optional) A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.

* `bytes_to_capture_per_packet` - (Optional) Number of bytes captured per packet, the remaining bytes are truncated.

* `filters` - (Optional) One or more `filter` block defined below.

* `time_limit_in_seconds` - (Optional) Maximum duration of the capture session in seconds.

* `total_bytes_per_session` - (Optional) Maximum size of the capture output.

---

The `filter` block supports the following:

* `protocol` - (Optional) Protocol to be filtered on. Defaults to `TCP`.

* `local_ip_address` - (Optional) Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.

* `remote_ip_address` - (Optional) Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.

* `local_port` - (Optional) Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.

* `remote_port` - (Optional) Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - The provisioning state of the packet capture session.

* `name` - Name of the packet capture.

* `id` - ID of the packet capture.

* `type` - Packet capture type.

* `etag` - 
