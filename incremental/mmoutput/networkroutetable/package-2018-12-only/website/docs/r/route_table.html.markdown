---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_route_table"
sidebar_current: "docs-azurerm-resource-route-table"
description: |-
  Manage Azure RouteTable instance.
---

# azurerm_route_table

Manage Azure RouteTable instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the route table. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `disable_bgp_route_propagation` - (Optional) Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated. Changing this forces a new resource to be created.

* `routes` - (Optional) One or more `route` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `route` block supports the following:

* `id` - (Optional) Resource ID.

* `address_prefix` - (Optional) The destination CIDR to which the route applies.

* `next_hop_type` - (Required) The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'

* `next_hop_ip_address` - (Optional) The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

## Attributes Reference

The following attributes are exported:

* `subnets` - One or more `subnet` block defined below.

* `provisioning_state` - The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `name` - Resource name.

* `type` - Resource type.


---

The `subnet` block contains the following:

* `id` - (Optional) Resource ID.

* `address_prefix` - (Optional) The address prefix for the subnet.

* `address_prefixes` - (Optional) List of  address prefixes for the subnet.

* `network_security_group` - (Optional) One `network_security_group` block defined below.

* `route_table` - (Optional) One `route_table` block defined below.

* `service_endpoints` - (Optional) One or more `service_endpoint` block defined below.

* `service_endpoint_policies` - (Optional) One or more `service_endpoint_policy` block defined below.

* `interface_endpoints` - (Optional) One or more `interface_endpoint` block defined below.

* `ip_configurations` - (Optional) One or more `ip_configuration` block defined below.

* `ip_configuration_profiles` - (Optional) One or more `ip_configuration_profile` block defined below.

* `resource_navigation_links` - (Optional) One or more `resource_navigation_link` block defined below.

* `service_association_links` - (Optional) One or more `service_association_link` block defined below.

* `delegations` - (Optional) One or more `delegation` block defined below.

* `purpose` - (Optional) A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.

* `provisioning_state` - (Optional) The provisioning state of the resource.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `network_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `route_table` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated.

---

The `service_endpoint` block supports the following:

* `service` - (Optional) The type of the endpoint service.

* `locations` - (Optional) A list of locations.

* `provisioning_state` - (Optional) The provisioning state of the resource.

---

The `service_endpoint_policy` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `interface_endpoint` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated.

---

The `ip_configuration` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `ip_configuration_profile` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource. This name can be used to access the resource.

* `type` - (Optional) Sub Resource type.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `resource_navigation_link` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `service_association_link` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `delegation` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a subnet. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.
