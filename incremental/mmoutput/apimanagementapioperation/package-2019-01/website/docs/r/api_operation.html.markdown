---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_operation"
sidebar_current: "docs-azurerm-resource-api-operation"
description: |-
  Manage Azure ApiOperation instance.
---

# azurerm_api_operation

Manage Azure ApiOperation instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the API Management service. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `api_id` - (Required) API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number. Changing this forces a new resource to be created.

* `display_name` - (Required) Operation Name.

* `method` - (Required) A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.

* `operation_id` - (Required) Operation identifier within an API. Must be unique in the current API Management service instance. Changing this forces a new resource to be created.

* `url_template` - (Required) Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}

* `description` - (Optional) Description of the operation. May include HTML formatting tags.

* `policies` - (Optional) Operation Policies

* `request` - (Optional) One `request` block defined below.

* `responses` - (Optional) One or more `response` block defined below.

* `template_parameters` - (Optional) One or more `template_parameter` block defined below.

---

The `request` block supports the following:

* `description` - (Optional) Operation request description.

* `query_parameters` - (Optional) One or more `query_parameter` block defined below.

* `headers` - (Optional) One or more `header` block defined below.

* `representations` - (Optional) One or more `representation` block defined below.


---

The `query_parameter` block supports the following:

* `name` - (Required) Parameter name.

* `description` - (Optional) Parameter description.

* `type` - (Required) Parameter type.

* `default_value` - (Optional) Default parameter value.

* `required` - (Optional) Specifies whether parameter is required or not.

* `values` - (Optional) Parameter values.

---

The `header` block supports the following:

* `name` - (Required) Parameter name.

* `description` - (Optional) Parameter description.

* `type` - (Required) Parameter type.

* `default_value` - (Optional) Default parameter value.

* `required` - (Optional) Specifies whether parameter is required or not.

* `values` - (Optional) Parameter values.

---

The `representation` block supports the following:

* `content_type` - (Required) Specifies a registered or custom content type for this representation, e.g. application/xml.

* `sample` - (Optional) An example of the representation.

* `schema_id` - (Optional) Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.

* `type_name` - (Optional) Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.

* `form_parameters` - (Optional) One or more `form_parameter` block defined below.


---

The `form_parameter` block supports the following:

* `name` - (Required) Parameter name.

* `description` - (Optional) Parameter description.

* `type` - (Required) Parameter type.

* `default_value` - (Optional) Default parameter value.

* `required` - (Optional) Specifies whether parameter is required or not.

* `values` - (Optional) Parameter values.

---

The `response` block supports the following:

* `status_code` - (Required) Operation response HTTP status code.

* `description` - (Optional) Operation response description.

* `representations` - (Optional) One or more `representation` block defined below.

* `headers` - (Optional) One or more `header` block defined below.


---

The `representation` block supports the following:

* `content_type` - (Required) Specifies a registered or custom content type for this representation, e.g. application/xml.

* `sample` - (Optional) An example of the representation.

* `schema_id` - (Optional) Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.

* `type_name` - (Optional) Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'.

* `form_parameters` - (Optional) One or more `form_parameter` block defined below.


---

The `form_parameter` block supports the following:

* `name` - (Required) Parameter name.

* `description` - (Optional) Parameter description.

* `type` - (Required) Parameter type.

* `default_value` - (Optional) Default parameter value.

* `required` - (Optional) Specifies whether parameter is required or not.

* `values` - (Optional) Parameter values.

---

The `header` block supports the following:

* `name` - (Required) Parameter name.

* `description` - (Optional) Parameter description.

* `type` - (Required) Parameter type.

* `default_value` - (Optional) Default parameter value.

* `required` - (Optional) Specifies whether parameter is required or not.

* `values` - (Optional) Parameter values.

---

The `template_parameter` block supports the following:

* `name` - (Required) Parameter name.

* `description` - (Optional) Parameter description.

* `type` - (Required) Parameter type.

* `default_value` - (Optional) Default parameter value.

* `required` - (Optional) Specifies whether parameter is required or not.

* `values` - (Optional) Parameter values.

## Attributes Reference

The following attributes are exported:

* `id` - Resource ID.

* `name` - Resource name.

* `type` - Resource type for API Management resource.
