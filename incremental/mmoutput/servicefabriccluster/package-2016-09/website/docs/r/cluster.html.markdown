---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cluster"
sidebar_current: "docs-azurerm-resource-cluster"
description: |-
  Manage Azure Cluster instance.
---

# azurerm_cluster

Manage Azure Cluster instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the cluster resource Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group to which the resource belongs or get created Changing this forces a new resource to be created.

* `location` - (Required) Resource location. Changing this forces a new resource to be created.

* `management_endpoint` - (Required) The http management endpoint of the cluster

* `node_types` - (Required) One or more `node_type` block defined below.

---

The `node_type` block supports the following:

* `name` - (Required) Name of the node type

* `placement_properties` - (Optional) The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run

* `capacities` - (Optional) The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much of a resource a node has

* `client_connection_endpoint_port` - (Required) The TCP cluster management endpoint port

* `http_gateway_endpoint_port` - (Required) The HTTP cluster management endpoint port

* `durability_level` - (Optional) Node type durability Level Defaults to `Bronze`.

* `application_ports` - (Optional) One `application_port` block defined below.

* `ephemeral_ports` - (Optional) One `ephemeral_port` block defined below.

* `is_primary` - (Required) Mark this as the primary node type

* `vm_instance_count` - (Required) The number of node instances in the node type

* `reverse_proxy_endpoint_port` - (Optional) Endpoint used by reverse proxy


---

The `application_port` block supports the following:

* `start_port` - (Required) Starting port of a range of ports

* `end_port` - (Required) End port of a range of ports

---

The `ephemeral_port` block supports the following:

* `start_port` - (Required) Starting port of a range of ports

* `end_port` - (Required) End port of a range of ports

* `azure_active_directory` - (Optional) One `azure_active_directory` block defined below.

* `certificate` - (Optional) One `certificate` block defined below.

* `client_certificate_common_names` - (Optional) One or more `client_certificate_common_name` block defined below.

* `client_certificate_thumbprints` - (Optional) One or more `client_certificate_thumbprint` block defined below.

* `cluster_code_version` - (Optional) The ServiceFabric code version running in your cluster

* `diagnostics_storage_account_config` - (Optional) One `diagnostics_storage_account_config` block defined below.

* `fabric_settings` - (Optional) One or more `fabric_setting` block defined below.

* `reliability_level` - (Optional) Cluster reliability level indicates replica set size of system service Defaults to `Bronze`.

* `reverse_proxy_certificate` - (Optional) One `reverse_proxy_certificate` block defined below.

* `upgrade_description` - (Optional) One `upgrade_description` block defined below.

* `upgrade_mode` - (Optional) Cluster upgrade mode indicates if fabric upgrade is initiated automatically by the system or not Defaults to `Automatic`.

* `vm_image` - (Optional) The name of VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `azure_active_directory` block supports the following:

* `tenant_id` - (Optional) Azure active directory tenant id

* `cluster_application` - (Optional) Azure active directory cluster application id

* `client_application` - (Optional) Azure active directory client application id

---

The `certificate` block supports the following:

* `thumbprint` - (Required) Thumbprint of the primary certificate

* `thumbprint_secondary` - (Optional) Thumbprint of the secondary certificate

* `x509store_name` - (Optional) The local certificate store location Defaults to `AddressBook`.

---

The `client_certificate_common_name` block supports the following:

* `is_admin` - (Required) Is this certificate used for admin access from the client, if false , it is used or query only access

* `certificate_common_name` - (Required) Certificate common name to be granted access; be careful using wild card common names

* `certificate_issuer_thumbprint` - (Required) Certificate issuer thumbprint

---

The `client_certificate_thumbprint` block supports the following:

* `is_admin` - (Required) Is this certificate used for admin access from the client, if false, it is used or query only access

* `certificate_thumbprint` - (Required) Certificate thumbprint

---

The `diagnostics_storage_account_config` block supports the following:

* `storage_account_name` - (Required) Diagnostics storage account name

* `protected_account_key_name` - (Required) Protected Diagnostics storage key name

* `blob_endpoint` - (Required) Diagnostics storage account blob endpoint

* `queue_endpoint` - (Required) Diagnostics storage account queue endpoint

* `table_endpoint` - (Required) Diagnostics storage account table endpoint

---

The `fabric_setting` block supports the following:

* `name` - (Required) The name of settings section

* `parameters` - (Required) One or more `parameter` block defined below.


---

The `parameter` block supports the following:

* `name` - (Required) The name of settings property

* `value` - (Required) The value of the property

---

The `reverse_proxy_certificate` block supports the following:

* `thumbprint` - (Required) Thumbprint of the primary certificate

* `thumbprint_secondary` - (Optional) Thumbprint of the secondary certificate

* `x509store_name` - (Optional) The local certificate store location Defaults to `AddressBook`.

---

The `upgrade_description` block supports the following:

* `override_user_upgrade_policy` - (Optional) Use the user defined upgrade policy or not

* `force_restart` - (Optional) Force node to restart or not

* `upgrade_replica_set_check_timeout` - (Required) Timeout for replica set upgrade to complete,it represents .Net TimeSpan

* `health_check_wait_duration` - (Required) The length of time to wait after completing an upgrade domain before performing health checks, it represents .Net TimeSpan

* `health_check_stable_duration` - (Required) The length of time that health checks must pass continuously,it represents .Net TimeSpan

* `health_check_retry_timeout` - (Required) The length of time that health checks can fail continuously,it represents .Net TimeSpan

* `upgrade_timeout` - (Required) The upgrade timeout,it represents .Net TimeSpan

* `upgrade_domain_timeout` - (Required) The timeout for any upgrade domain,it represents .Net TimeSpan

* `health_policy` - (Required) One `health_policy` block defined below.

* `delta_health_policy` - (Optional) One `delta_health_policy` block defined below.


---

The `health_policy` block supports the following:

* `max_percent_unhealthy_nodes` - (Optional) The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.

* `max_percent_unhealthy_applications` - (Optional) The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.

---

The `delta_health_policy` block supports the following:

* `max_percent_delta_unhealthy_nodes` - (Required) Additional unhealthy nodes percentage

* `max_percent_upgrade_domain_delta_unhealthy_nodes` - (Required) Additional unhealthy nodes percentage per upgrade domain

* `max_percent_delta_unhealthy_applications` - (Required) Additional unhealthy applications percentage

## Attributes Reference

The following attributes are exported:

* `id` - Resource ID.

* `name` - Resource name.

* `type` - Resource type.
