---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_application_gateway"
sidebar_current: "docs-azurerm-resource-application-gateway"
description: |-
  Manage Azure ApplicationGateway instance.
---

# azurerm_application_gateway

Manage Azure ApplicationGateway instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the application gateway. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `authentication_certificates` - (Optional) One or more `authentication_certificate` block defined below.

* `autoscale_configuration` - (Optional) One `autoscale_configuration` block defined below.

* `backend_address_pools` - (Optional) One or more `backend_address_pool` block defined below.

* `backend_http_settings_collection` - (Optional) One or more `backend_http_settings_collection` block defined below.

* `custom_error_configurations` - (Optional) One or more `custom_error_configuration` block defined below.

* `enable_fips` - (Optional) Whether FIPS is enabled on the application gateway resource.

* `enable_http2` - (Optional) Whether HTTP2 is enabled on the application gateway resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated. Changing this forces a new resource to be created.

* `firewall_policy` - (Optional) One `firewall_policy` block defined below.

* `frontend_ipconfigurations` - (Optional) One or more `frontend_ipconfiguration` block defined below.

* `frontend_ports` - (Optional) One or more `frontend_port` block defined below.

* `gateway_ipconfigurations` - (Optional) One or more `gateway_ipconfiguration` block defined below.

* `http_listeners` - (Optional) One or more `http_listener` block defined below.

* `identity` - (Optional) One `identity` block defined below.

* `probes` - (Optional) One or more `probe` block defined below.

* `redirect_configurations` - (Optional) One or more `redirect_configuration` block defined below.

* `request_routing_rules` - (Optional) One or more `request_routing_rule` block defined below.

* `resource_guid` - (Optional) Resource GUID property of the application gateway resource.

* `rewrite_rule_sets` - (Optional) One or more `rewrite_rule_set` block defined below.

* `sku` - (Optional) One `sku` block defined below.

* `ssl_certificates` - (Optional) One or more `ssl_certificate` block defined below.

* `ssl_policy` - (Optional) One `ssl_policy` block defined below.

* `trusted_root_certificates` - (Optional) One or more `trusted_root_certificate` block defined below.

* `url_path_maps` - (Optional) One or more `url_path_map` block defined below.

* `web_application_firewall_configuration` - (Optional) One `web_application_firewall_configuration` block defined below.

* `zones` - (Optional) A list of availability zones denoting where the resource needs to come from. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `authentication_certificate` block supports the following:

* `id` - (Optional) Resource ID.

* `data` - (Optional) Certificate public data.

* `name` - (Optional) Name of the authentication certificate that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.

---

The `autoscale_configuration` block supports the following:

* `min_capacity` - (Required) Lower bound on number of Application Gateway capacity

* `max_capacity` - (Optional) Upper bound on number of Application Gateway capacity

---

The `backend_address_pool` block supports the following:

* `id` - (Optional) Resource ID.

* `backend_ipconfigurations` - (Optional) One or more `backend_ipconfiguration` block defined below.

* `backend_addresses` - (Optional) One or more `backend_address` block defined below.

* `name` - (Optional) Name of the backend address pool that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `backend_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `backend_address` block supports the following:

* `fqdn` - (Optional) Fully qualified domain name (FQDN).

* `ip_address` - (Optional) IP address

---

The `backend_http_settings_collection` block supports the following:

* `id` - (Optional) Resource ID.

* `port` - (Optional) The destination port on the backend.

* `protocol` - (Optional) The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'. Defaults to `Http`.

* `cookie_based_affinity` - (Optional) Cookie based affinity. Defaults to `Enabled`.

* `request_timeout` - (Optional) Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.

* `probe` - (Optional) One `probe` block defined below.

* `authentication_certificates` - (Optional) One or more `authentication_certificate` block defined below.

* `trusted_root_certificates` - (Optional) One or more `trusted_root_certificate` block defined below.

* `connection_draining` - (Optional) One `connection_draining` block defined below.

* `host_name` - (Optional) Host header to be sent to the backend servers.

* `pick_host_name_from_backend_address` - (Optional) Whether to pick host header should be picked from the host name of the backend server. Default value is false.

* `affinity_cookie_name` - (Optional) Cookie name to use for the affinity cookie.

* `probe_enabled` - (Optional) Whether the probe is enabled. Default value is false.

* `path` - (Optional) Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.

* `name` - (Optional) Name of the backend http settings that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `probe` block supports the following:

* `id` - (Optional) Resource ID.

---

The `authentication_certificate` block supports the following:

* `id` - (Optional) Resource ID.

---

The `trusted_root_certificate` block supports the following:

* `id` - (Optional) Resource ID.

---

The `connection_draining` block supports the following:

* `enabled` - (Required) Whether connection draining is enabled or not.

* `drain_timeout_in_sec` - (Required) The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.

---

The `custom_error_configuration` block supports the following:

* `status_code` - (Optional) Status code of the application gateway customer error. Defaults to `HttpStatus403`.

* `custom_error_page_url` - (Optional) Error page URL of the application gateway customer error.

---

The `firewall_policy` block supports the following:

* `id` - (Optional) Resource ID.

---

The `frontend_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

* `private_ip_address` - (Optional) PrivateIPAddress of the network interface IP Configuration.

* `private_ipallocation_method` - (Optional) PrivateIP allocation method. Defaults to `Static`.

* `subnet` - (Optional) One `subnet` block defined below.

* `public_ip_address` - (Optional) One `public_ip_address` block defined below.

* `name` - (Optional) Name of the frontend IP configuration that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `subnet` block supports the following:

* `id` - (Optional) Resource ID.

---

The `public_ip_address` block supports the following:

* `id` - (Optional) Resource ID.

---

The `frontend_port` block supports the following:

* `id` - (Optional) Resource ID.

* `port` - (Optional) Frontend port

* `name` - (Optional) Name of the frontend port that is unique within an Application Gateway

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.

---

The `gateway_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

* `subnet` - (Optional) One `subnet` block defined below.

* `name` - (Optional) Name of the IP configuration that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `subnet` block supports the following:

* `id` - (Optional) Resource ID.

---

The `http_listener` block supports the following:

* `id` - (Optional) Resource ID.

* `frontend_ipconfiguration` - (Optional) One `frontend_ipconfiguration` block defined below.

* `frontend_port` - (Optional) One `frontend_port` block defined below.

* `protocol` - (Optional) Protocol of the HTTP listener. Possible values are 'Http' and 'Https'. Defaults to `Http`.

* `host_name` - (Optional) Host name of HTTP listener.

* `ssl_certificate` - (Optional) One `ssl_certificate` block defined below.

* `require_server_name_indication` - (Optional) Applicable only if protocol is https. Enables SNI for multi-hosting.

* `custom_error_configurations` - (Optional) One or more `custom_error_configuration` block defined below.

* `name` - (Optional) Name of the HTTP listener that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `frontend_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

---

The `frontend_port` block supports the following:

* `id` - (Optional) Resource ID.

---

The `ssl_certificate` block supports the following:

* `id` - (Optional) Resource ID.

---

The `custom_error_configuration` block supports the following:

* `status_code` - (Optional) Status code of the application gateway customer error. Defaults to `HttpStatus403`.

* `custom_error_page_url` - (Optional) Error page URL of the application gateway customer error.

---

The `identity` block supports the following:

* `type` - (Optional) The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. Defaults to `SystemAssigned`.

* `user_assigned_identities` - (Optional) The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.

---

The `probe` block supports the following:

* `id` - (Optional) Resource ID.

* `protocol` - (Optional) The protocol used for the probe. Possible values are 'Http' and 'Https'. Defaults to `Http`.

* `host` - (Optional) Host name to send the probe to.

* `path` - (Optional) Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>

* `interval` - (Optional) The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.

* `timeout` - (Optional) The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.

* `unhealthy_threshold` - (Optional) The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.

* `pick_host_name_from_backend_http_settings` - (Optional) Whether the host header should be picked from the backend http settings. Default value is false.

* `min_servers` - (Optional) Minimum number of servers that are always marked healthy. Default value is 0.

* `match` - (Optional) One `match` block defined below.

* `name` - (Optional) Name of the probe that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `match` block supports the following:

* `body` - (Optional) Body that must be contained in the health response. Default value is empty.

* `status_codes` - (Optional) Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.

---

The `redirect_configuration` block supports the following:

* `id` - (Optional) Resource ID.

* `redirect_type` - (Optional) Supported http redirection types - Permanent, Temporary, Found, SeeOther. Defaults to `Permanent`.

* `target_listener` - (Optional) One `target_listener` block defined below.

* `target_url` - (Optional) Url to redirect the request to.

* `include_path` - (Optional) Include path in the redirected url.

* `include_query_string` - (Optional) Include query string in the redirected url.

* `request_routing_rules` - (Optional) One or more `request_routing_rule` block defined below.

* `url_path_maps` - (Optional) One or more `url_path_map` block defined below.

* `path_rules` - (Optional) One or more `path_rule` block defined below.

* `name` - (Optional) Name of the redirect configuration that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `target_listener` block supports the following:

* `id` - (Optional) Resource ID.

---

The `request_routing_rule` block supports the following:

* `id` - (Optional) Resource ID.

---

The `url_path_map` block supports the following:

* `id` - (Optional) Resource ID.

---

The `path_rule` block supports the following:

* `id` - (Optional) Resource ID.

---

The `request_routing_rule` block supports the following:

* `id` - (Optional) Resource ID.

* `rule_type` - (Optional) Rule type. Defaults to `Basic`.

* `backend_address_pool` - (Optional) One `backend_address_pool` block defined below.

* `backend_http_settings` - (Optional) One `backend_http_setting` block defined below.

* `http_listener` - (Optional) One `http_listener` block defined below.

* `url_path_map` - (Optional) One `url_path_map` block defined below.

* `rewrite_rule_set` - (Optional) One `rewrite_rule_set` block defined below.

* `redirect_configuration` - (Optional) One `redirect_configuration` block defined below.

* `name` - (Optional) Name of the request routing rule that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `backend_address_pool` block supports the following:

* `id` - (Optional) Resource ID.

---

The `backend_http_setting` block supports the following:

* `id` - (Optional) Resource ID.

---

The `http_listener` block supports the following:

* `id` - (Optional) Resource ID.

---

The `url_path_map` block supports the following:

* `id` - (Optional) Resource ID.

---

The `rewrite_rule_set` block supports the following:

* `id` - (Optional) Resource ID.

---

The `redirect_configuration` block supports the following:

* `id` - (Optional) Resource ID.

---

The `rewrite_rule_set` block supports the following:

* `id` - (Optional) Resource ID.

* `rewrite_rules` - (Optional) One or more `rewrite_rule` block defined below.

* `name` - (Optional) Name of the rewrite rule set that is unique within an Application Gateway.


---

The `rewrite_rule` block supports the following:

* `name` - (Optional) Name of the rewrite rule that is unique within an Application Gateway.

* `rule_sequence` - (Optional) Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.

---

The `sku` block supports the following:

* `name` - (Optional) Name of an application gateway SKU. Defaults to `Standard_Small`.

* `tier` - (Optional) Tier of an application gateway. Defaults to `Standard`.

* `capacity` - (Optional) Capacity (instance count) of an application gateway.

---

The `ssl_certificate` block supports the following:

* `id` - (Optional) Resource ID.

* `data` - (Optional) Base-64 encoded pfx certificate. Only applicable in PUT Request.

* `password` - (Optional) Password for the pfx file specified in data. Only applicable in PUT request.

* `public_cert_data` - (Optional) Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.

* `key_vault_secret_id` - (Optional) Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.

* `name` - (Optional) Name of the SSL certificate that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.

---

The `ssl_policy` block supports the following:

* `disabled_ssl_protocols` - (Optional) Ssl protocols to be disabled on application gateway.

* `policy_type` - (Optional) Type of Ssl Policy Defaults to `Predefined`.

* `policy_name` - (Optional) Name of Ssl predefined policy Defaults to `AppGwSslPolicy20150501`.

* `cipher_suites` - (Optional) Ssl cipher suites to be enabled in the specified order to application gateway.

* `min_protocol_version` - (Optional) Minimum version of Ssl protocol to be supported on application gateway. Defaults to `TLSv1_0`.

---

The `trusted_root_certificate` block supports the following:

* `id` - (Optional) Resource ID.

* `data` - (Optional) Certificate public data.

* `key_vault_secret_id` - (Optional) Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.

* `name` - (Optional) Name of the trusted root certificate that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.

---

The `url_path_map` block supports the following:

* `id` - (Optional) Resource ID.

* `default_backend_address_pool` - (Optional) One `default_backend_address_pool` block defined below.

* `default_backend_http_settings` - (Optional) One `default_backend_http_setting` block defined below.

* `default_rewrite_rule_set` - (Optional) One `default_rewrite_rule_set` block defined below.

* `default_redirect_configuration` - (Optional) One `default_redirect_configuration` block defined below.

* `path_rules` - (Optional) One or more `path_rule` block defined below.

* `name` - (Optional) Name of the URL path map that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.


---

The `default_backend_address_pool` block supports the following:

* `id` - (Optional) Resource ID.

---

The `default_backend_http_setting` block supports the following:

* `id` - (Optional) Resource ID.

---

The `default_rewrite_rule_set` block supports the following:

* `id` - (Optional) Resource ID.

---

The `default_redirect_configuration` block supports the following:

* `id` - (Optional) Resource ID.

---

The `path_rule` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the path rule that is unique within an Application Gateway.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Type of the resource.

---

The `web_application_firewall_configuration` block supports the following:

* `enabled` - (Required) Whether the web application firewall is enabled or not.

* `firewall_mode` - (Required) Web application firewall mode.

* `rule_set_type` - (Required) The type of the web application firewall rule set. Possible values are: 'OWASP'.

* `rule_set_version` - (Required) The version of the rule set type.

* `disabled_rule_groups` - (Optional) One or more `disabled_rule_group` block defined below.

* `request_body_check` - (Optional) Whether allow WAF to check request Body.

* `max_request_body_size` - (Optional) Maximum request body size for WAF.

* `max_request_body_size_in_kb` - (Optional) Maximum request body size in Kb for WAF.

* `file_upload_limit_in_mb` - (Optional) Maximum file upload size in Mb for WAF.

* `exclusions` - (Optional) One or more `exclusion` block defined below.


---

The `disabled_rule_group` block supports the following:

* `rule_group_name` - (Required) The name of the rule group that will be disabled.

* `rules` - (Optional) The list of rules that will be disabled. If null, all rules of the rule group will be disabled.

---

The `exclusion` block supports the following:

* `match_variable` - (Required) The variable to be excluded.

* `selector_match_operator` - (Required) When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.

* `selector` - (Required) When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.

## Attributes Reference

The following attributes are exported:

* `operational_state` - Operational state of the application gateway resource.

* `provisioning_state` - Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `name` - Resource name.

* `type` - Resource type.
