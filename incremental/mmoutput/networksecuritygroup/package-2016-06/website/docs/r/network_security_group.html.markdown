---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_security_group"
sidebar_current: "docs-azurerm-resource-network-security-group"
description: |-
  Manage Azure NetworkSecurityGroup instance.
---

# azurerm_network_security_group

Manage Azure NetworkSecurityGroup instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the network security group. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `id` - (Optional) Resource Id Changing this forces a new resource to be created.

* `location` - (Optional) Resource location Changing this forces a new resource to be created.

* `default_security_rules` - (Optional) One or more `default_security_rule` block defined below.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated Changing this forces a new resource to be created.

* `resource_guid` - (Optional) Gets or sets resource guid property of the network security group resource

* `security_rules` - (Optional) One or more `security_rule` block defined below.

* `tags` - (Optional) Resource tags Changing this forces a new resource to be created.

---

The `default_security_rule` block supports the following:

* `id` - (Optional) Resource Id

* `description` - (Optional) Gets or sets a description for this rule. Restricted to 140 chars.

* `protocol` - (Required) Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).

* `source_port_range` - (Optional) Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.

* `destination_port_range` - (Optional) Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.

* `source_address_prefix` - (Required) Gets or sets source address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.

* `destination_address_prefix` - (Required) Gets or sets destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.

* `access` - (Required) Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'

* `priority` - (Optional) Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.

* `direction` - (Required) Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outgoing traffic.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated

---

The `security_rule` block supports the following:

* `id` - (Optional) Resource Id

* `description` - (Optional) Gets or sets a description for this rule. Restricted to 140 chars.

* `protocol` - (Required) Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).

* `source_port_range` - (Optional) Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.

* `destination_port_range` - (Optional) Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.

* `source_address_prefix` - (Required) Gets or sets source address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.

* `destination_address_prefix` - (Required) Gets or sets destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.

* `access` - (Required) Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'

* `priority` - (Optional) Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.

* `direction` - (Required) Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outgoing traffic.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated

## Attributes Reference

The following attributes are exported:

* `network_interfaces` - One or more `network_interface` block defined below.

* `subnets` - One or more `subnet` block defined below.

* `provisioning_state` - Gets provisioning state of the PublicIP resource Updating/Deleting/Failed

* `name` - Resource name

* `type` - Resource type


---

The `network_interface` block contains the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Resource name

* `type` - (Optional) Resource type

* `location` - (Optional) Resource location Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags

* `virtual_machine` - (Optional) One `virtual_machine` block defined below.

* `network_security_group` - (Optional) One `network_security_group` block defined below.

* `ip_configurations` - (Optional) One or more `ip_configuration` block defined below.

* `dns_settings` - (Optional) One `dns_setting` block defined below.

* `mac_address` - (Optional) Gets the MAC address of the network interface

* `primary` - (Optional) Gets whether this is a primary NIC on a virtual machine

* `enable_ipforwarding` - (Optional) Gets or sets whether IPForwarding is enabled on the NIC

* `resource_guid` - (Optional) Gets or sets resource guid property of the network interface resource

* `provisioning_state` - (Optional) Gets provisioning state of the PublicIP resource Updating/Deleting/Failed

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated


---

The `virtual_machine` block supports the following:

* `id` - (Optional) Resource Id

---

The `network_security_group` block supports the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Resource name

* `type` - (Optional) Resource type

* `location` - (Optional) Resource location Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated

---

The `ip_configuration` block supports the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated

---

The `dns_setting` block supports the following:

* `dns_servers` - (Optional) Gets or sets list of DNS servers IP addresses

* `applied_dns_servers` - (Optional) Gets or sets list of Applied DNS servers IP addresses

* `internal_dns_name_label` - (Optional) Gets or sets the internal DNS name

* `internal_fqdn` - (Optional) Gets or sets the internal fqdn.

* `internal_domain_name_suffix` - (Optional) Gets or sets internal domain name suffix of the NIC.

---

The `subnet` block contains the following:

* `id` - (Optional) Resource Id

* `address_prefix` - (Optional) Gets or sets Address prefix for the subnet.

* `network_security_group` - (Optional) One `network_security_group` block defined below.

* `route_table` - (Optional) One `route_table` block defined below.

* `ip_configurations` - (Optional) One or more `ip_configuration` block defined below.

* `resource_navigation_links` - (Optional) One or more `resource_navigation_link` block defined below.

* `provisioning_state` - (Optional) Gets provisioning state of the resource

* `name` - (Optional) Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated


---

The `network_security_group` block supports the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Resource name

* `type` - (Optional) Resource type

* `location` - (Optional) Resource location Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated

---

The `route_table` block supports the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Resource name

* `type` - (Optional) Resource type

* `location` - (Optional) Resource location Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated

---

The `ip_configuration` block supports the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated

---

The `resource_navigation_link` block supports the following:

* `id` - (Optional) Resource Id

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated
