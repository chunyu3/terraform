---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_express_route_circuit"
sidebar_current: "docs-azurerm-resource-express-route-circuit"
description: |-
  Manage Azure ExpressRouteCircuit instance.
---

# azurerm_express_route_circuit

Manage Azure ExpressRouteCircuit instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the circuit. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `allow_classic_operations` - (Optional) Allow classic operations

* `authorizations` - (Optional) One or more `authorization` block defined below.

* `circuit_provisioning_state` - (Optional) The CircuitProvisioningState state of the resource.

* `gateway_manager_etag` - (Optional) The GatewayManager Etag.

* `peerings` - (Optional) One or more `peering` block defined below.

* `service_key` - (Optional) The ServiceKey.

* `service_provider_notes` - (Optional) The ServiceProviderNotes.

* `service_provider_properties` - (Optional) One `service_provider_property` block defined below.

* `service_provider_provisioning_state` - (Optional) The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'. Defaults to `NotProvisioned`.

* `sku` - (Optional) One `sku` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `authorization` block supports the following:

* `id` - (Optional) Resource ID.

* `authorization_key` - (Optional) The authorization key.

* `authorization_use_status` - (Optional) AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'. Defaults to `Available`.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource.

---

The `peering` block supports the following:

* `id` - (Optional) Resource ID.

* `peering_type` - (Optional) The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'. Defaults to `AzurePublicPeering`.

* `state` - (Optional) The state of peering. Possible values are: 'Disabled' and 'Enabled' Defaults to `Disabled`.

* `azure_asn` - (Optional) The Azure ASN.

* `peer_asn` - (Optional) The peer ASN.

* `primary_peer_address_prefix` - (Optional) The primary address prefix.

* `secondary_peer_address_prefix` - (Optional) The secondary address prefix.

* `primary_azure_port` - (Optional) The primary port.

* `secondary_azure_port` - (Optional) The secondary port.

* `shared_key` - (Optional) The shared key.

* `vlan_id` - (Optional) The VLAN ID.

* `microsoft_peering_config` - (Optional) One `microsoft_peering_config` block defined below.

* `stats` - (Optional) One `stat` block defined below.

* `gateway_manager_etag` - (Optional) The GatewayManager Etag.

* `last_modified_by` - (Optional) Gets whether the provider or the customer last modified the peering.

* `route_filter` - (Optional) One `route_filter` block defined below.

* `ipv6peering_config` - (Optional) One `ipv6peering_config` block defined below.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource.


---

The `microsoft_peering_config` block supports the following:

* `advertised_public_prefixes` - (Optional) The reference of AdvertisedPublicPrefixes.

* `advertised_public_prefixes_state` - (Optional) AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'. Defaults to `NotConfigured`.

* `customer_asn` - (Optional) The CustomerASN of the peering.

* `routing_registry_name` - (Optional) The RoutingRegistryName of the configuration.

---

The `stat` block supports the following:

* `primarybytes_in` - (Optional) Gets BytesIn of the peering.

* `primarybytes_out` - (Optional) Gets BytesOut of the peering.

* `secondarybytes_in` - (Optional) Gets BytesIn of the peering.

* `secondarybytes_out` - (Optional) Gets BytesOut of the peering.

---

The `route_filter` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

---

The `ipv6peering_config` block supports the following:

* `primary_peer_address_prefix` - (Optional) The primary address prefix.

* `secondary_peer_address_prefix` - (Optional) The secondary address prefix.

* `state` - (Optional) The state of peering. Possible values are: 'Disabled' and 'Enabled' Defaults to `Disabled`.

---

The `service_provider_property` block supports the following:

* `service_provider_name` - (Optional) The serviceProviderName.

* `peering_location` - (Optional) The peering location.

* `bandwidth_in_mbps` - (Optional) The BandwidthInMbps.

---

The `sku` block supports the following:

* `name` - (Optional) The name of the SKU.

* `tier` - (Optional) The tier of the SKU. Possible values are 'Standard' and 'Premium'. Defaults to `Standard`.

* `family` - (Optional) The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'. Defaults to `UnlimitedData`.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `name` - Resource name.

* `type` - Resource type.

* `etag` - Gets a unique read-only string that changes whenever the resource is updated.
