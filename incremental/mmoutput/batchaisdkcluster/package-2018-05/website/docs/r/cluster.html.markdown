---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cluster"
sidebar_current: "docs-azurerm-resource-cluster"
description: |-
  Manage Azure Cluster instance.
---

# azurerm_cluster

Manage Azure Cluster instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the cluster within the specified resource group. Cluster names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. Changing this forces a new resource to be created.

* `resource_group` - (Required) Name of the resource group to which the resource belongs. Changing this forces a new resource to be created.

* `user_account_settings` - (Required) One `user_account_setting` block defined below.

* `vm_size` - (Required) The size of the virtual machines in the cluster. All nodes in a cluster have the same VM size. For information about available VM sizes for clusters using images from the Virtual Machines Marketplace see Sizes for Virtual Machines (Linux). Batch AI service supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).

* `workspace_name` - (Required) The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. Changing this forces a new resource to be created.

---

The `user_account_setting` block supports the following:

* `admin_user_name` - (Required) Name of the administrator user account which can be used to SSH to nodes.

* `admin_user_ssh_public_key` - (Optional) SSH public key of the administrator user account.

* `admin_user_password` - (Optional) Password of the administrator user account.

* `node_setup` - (Optional) One `node_setup` block defined below.

* `scale_settings` - (Optional) One `scale_setting` block defined below.

* `subnet` - (Optional) One `subnet` block defined below.

* `virtual_machine_configuration` - (Optional) One `virtual_machine_configuration` block defined below.

* `vm_priority` - (Optional) VM priority. Allowed values are: dedicated (default) and lowpriority. Defaults to `dedicated`.

---

The `node_setup` block supports the following:

* `setup_task` - (Optional) One `setup_task` block defined below.

* `mount_volumes` - (Optional) One `mount_volume` block defined below.

* `performance_counters_settings` - (Optional) One `performance_counters_setting` block defined below.


---

The `setup_task` block supports the following:

* `command_line` - (Required) The command line to be executed on each cluster's node after it being allocated or rebooted. The command is executed in a bash subshell as a root.

* `environment_variables` - (Optional) One or more `environment_variable` block defined below.

* `secrets` - (Optional) One or more `secret` block defined below.

* `std_out_err_path_prefix` - (Required) The prefix of a path where the Batch AI service will upload the stdout, stderr and execution log of the setup task.


---

The `environment_variable` block supports the following:

* `name` - (Required) The name of the environment variable.

* `value` - (Required) The value of the environment variable.

---

The `secret` block supports the following:

* `name` - (Required) The name of the environment variable to store the secret value.

* `value` - (Optional) The value of the environment variable. This value will never be reported back by Batch AI.

---

The `mount_volume` block supports the following:

* `azure_file_shares` - (Optional) One or more `azure_file_share` block defined below.

* `azure_blob_file_systems` - (Optional) One or more `azure_blob_file_system` block defined below.

* `file_servers` - (Optional) One or more `file_server` block defined below.

* `unmanaged_file_systems` - (Optional) One or more `unmanaged_file_system` block defined below.


---

The `azure_file_share` block supports the following:

* `account_name` - (Required) Name of the Azure storage account.

* `azure_file_url` - (Required) URL to access the Azure File.

* `relative_mount_path` - (Required) The relative path on the compute node where the Azure File share will be mounted. Note that all cluster level file shares will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file shares will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.

* `file_mode` - (Optional) File mode for files on the mounted file share. Default value: 0777.

* `directory_mode` - (Optional) File mode for directories on the mounted file share. Default value: 0777.

---

The `azure_blob_file_system` block supports the following:

* `account_name` - (Required) Name of the Azure storage account.

* `container_name` - (Required) Name of the Azure Blob Storage container to mount on the cluster.

* `relative_mount_path` - (Required) The relative path on the compute node where the Azure File container will be mounted. Note that all cluster level containers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level containers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.

* `mount_options` - (Optional) Mount options for mounting blobfuse file system.

---

The `file_server` block supports the following:

* `source_directory` - (Optional) File Server directory that needs to be mounted. If this property is not specified, the entire File Server will be mounted.

* `relative_mount_path` - (Required) The relative path on the compute node where the File Server will be mounted. Note that all cluster level file servers will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file servers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.

* `mount_options` - (Optional) Mount options to be passed to mount command.

---

The `unmanaged_file_system` block supports the following:

* `mount_command` - (Required) Mount command line. Note, Batch AI will append mount path to the command on its own.

* `relative_mount_path` - (Required) The relative path on the compute node where the unmanaged file system will be mounted. Note that all cluster level unmanaged file systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level unmanaged file systems will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.

---

The `performance_counters_setting` block supports the following:

* `app_insights_reference` - (Required) One `app_insights_reference` block defined below.


---

The `app_insights_reference` block supports the following:

* `instrumentation_key` - (Optional) Value of the Azure Application Insights instrumentation key.

---

The `scale_setting` block supports the following:

* `manual` - (Optional) One `manual` block defined below.

* `auto_scale` - (Optional) One `auto_scale` block defined below.


---

The `manual` block supports the following:

* `target_node_count` - (Required) The desired number of compute nodes in the Cluster. Default is 0.

* `node_deallocation_option` - (Optional) An action to be performed when the cluster size is decreasing. The default value is requeue. Defaults to `requeue`.

---

The `auto_scale` block supports the following:

* `minimum_node_count` - (Required) The minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request.

* `maximum_node_count` - (Required) The maximum number of compute nodes the cluster can have.

* `initial_node_count` - (Optional) The number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0.

---

The `subnet` block supports the following:

* `id` - (Required) The ID of the resource

---

The `virtual_machine_configuration` block supports the following:

* `image_reference` - (Optional) One `image_reference` block defined below.


---

The `image_reference` block supports the following:

* `publisher` - (Required) Publisher of the image.

* `offer` - (Required) Offer of the image.

* `sku` - (Required) SKU of the image.

* `version` - (Optional) Version of the image.

* `virtual_machine_image_id` - (Optional) The ARM resource identifier of the virtual machine image for the compute nodes. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}. The virtual machine image must be in the same region and subscription as the cluster. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration. Note, you need to provide publisher, offer and sku of the base OS image of which the custom image has been derived from.

## Attributes Reference

The following attributes are exported:

* `creation_time` - The time when the cluster was created.

* `provisioning_state` - Provisioning state of the cluster. Possible value are: creating - Specifies that the cluster is being created. succeeded - Specifies that the cluster has been created successfully. failed - Specifies that the cluster creation has failed. deleting - Specifies that the cluster is being deleted.

* `provisioning_state_transition_time` - Time when the provisioning state was changed.

* `allocation_state` - Allocation state of the cluster. Possible values are: steady - Indicates that the cluster is not resizing. There are no changes to the number of compute nodes in the cluster in progress. A cluster enters this state when it is created and when no operations are being performed on the cluster to change the number of compute nodes. resizing - Indicates that the cluster is resizing; that is, compute nodes are being added to or removed from the cluster.

* `allocation_state_transition_time` - The time at which the cluster entered its current allocation state.

* `errors` - One or more `error` block defined below.

* `current_node_count` - The number of compute nodes currently assigned to the cluster.

* `node_state_counts` - One `node_state_count` block defined below.

* `id` - The ID of the resource.

* `name` - The name of the resource.

* `type` - The type of the resource.


---

The `error` block contains the following:

* `code` - (Optional) An identifier of the error. Codes are invariant and are intended to be consumed programmatically.

* `message` - (Optional) A message describing the error, intended to be suitable for display in a user interface.

* `details` - (Optional) One or more `detail` block defined below.


---

The `detail` block supports the following:

* `name` - (Optional) The name in the name-value pair.

* `value` - (Optional) The value in the name-value pair.

---

The `node_state_count` block contains the following:

* `idle_node_count` - (Optional) Number of compute nodes in idle state.

* `running_node_count` - (Optional) Number of compute nodes which are running jobs.

* `preparing_node_count` - (Optional) Number of compute nodes which are being prepared.

* `unusable_node_count` - (Optional) Number of compute nodes which are in unusable state.

* `leaving_node_count` - (Optional) Number of compute nodes which are leaving the cluster.
