---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_disk"
sidebar_current: "docs-azurerm-resource-disk"
description: |-
  Manage Azure Disk instance.
---

# azurerm_disk

Manage Azure Disk instance.


## Argument Reference

The following arguments are supported:

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `location` - (Required) Resource location Changing this forces a new resource to be created.

* `creation_data` - (Required) One `creation_datum` block defined below.

* `disk_name` - (Required) The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The maximum name length is 80 characters. Changing this forces a new resource to be created.

---

The `creation_datum` block supports the following:

* `create_option` - (Required) This enumerates the possible sources of a disk's creation.

* `storage_account_id` - (Optional) If createOption is Import, the Azure Resource Manager identifier of the storage account containing the blob to import as a disk. Required only if the blob is in a different subscription

* `image_reference` - (Optional) One `image_reference` block defined below.

* `source_uri` - (Optional) If createOption is Import, this is the URI of a blob to be imported into a managed disk.

* `source_resource_id` - (Optional) If createOption is Copy, this is the ARM id of the source snapshot or disk.


---

The `image_reference` block supports the following:

* `id` - (Required) A relative uri containing either a Platform Image Repository or user image reference.

* `lun` - (Optional) If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.

* `disk_iopsread_write` - (Optional) The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.

* `disk_mbps_read_write` - (Optional) The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.

* `disk_size_gb` - (Optional) If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.

* `encryption_settings_collection` - (Optional) One `encryption_settings_collection` block defined below.

* `hyper_vgeneration` - (Optional) The hypervisor generation of the Virtual Machine. Applicable to OS disks only. Defaults to `V1`.

* `os_type` - (Optional) The Operating System type. Defaults to `Windows`.

* `sku` - (Optional) One `sku` block defined below.

* `zones` - (Optional) The Logical zone list for Disk. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags Changing this forces a new resource to be created.

---

The `encryption_settings_collection` block supports the following:

* `enabled` - (Required) Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.

* `encryption_settings` - (Optional) One or more `encryption_setting` block defined below.


---

The `encryption_setting` block supports the following:

* `disk_encryption_key` - (Optional) One `disk_encryption_key` block defined below.

* `key_encryption_key` - (Optional) One `key_encryption_key` block defined below.


---

The `disk_encryption_key` block supports the following:

* `secret_url` - (Required) Url pointing to a key or secret in KeyVault

---

The `key_encryption_key` block supports the following:

* `key_url` - (Required) Url pointing to a key or secret in KeyVault

---

The `sku` block supports the following:

* `name` - (Optional) The sku name. Defaults to `Standard_LRS`.

## Attributes Reference

The following attributes are exported:

* `time_created` - The time when the disk was created.

* `provisioning_state` - The disk provisioning state.

* `disk_state` - The state of the disk.

* `id` - Resource Id

* `name` - Resource name

* `type` - Resource type

* `managed_by` - A relative URI containing the ID of the VM that has the disk attached.
