---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_network"
sidebar_current: "docs-azurerm-resource-virtual-network"
description: |-
  Manage Azure VirtualNetwork instance.
---

# azurerm_virtual_network

Manage Azure VirtualNetwork instance.


## Argument Reference

The following arguments are supported:

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `virtual_network_name` - (Required) The name of the virtual network. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `address_space` - (Optional) One `address_space` block defined below.

* `ddos_protection_plan` - (Optional) One `ddos_protection_plan` block defined below.

* `dhcp_options` - (Optional) One `dhcp_option` block defined below.

* `enable_ddos_protection` - (Optional) Indicates if DDoS protection is enabled for all the protected resources in the virtual network. It requires a DDoS protection plan associated with the resource.

* `enable_vm_protection` - (Optional) Indicates if VM protection is enabled for all the subnets in the virtual network.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated. Changing this forces a new resource to be created.

* `resource_guid` - (Optional) The resourceGuid property of the Virtual Network resource.

* `subnets` - (Optional) One or more `subnet` block defined below.

* `virtual_network_peerings` - (Optional) One or more `virtual_network_peering` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `address_space` block supports the following:

* `address_prefixes` - (Optional) A list of address blocks reserved for this virtual network in CIDR notation.

---

The `ddos_protection_plan` block supports the following:

* `id` - (Optional) Resource ID.

---

The `dhcp_option` block supports the following:

* `dns_servers` - (Optional) The list of DNS servers IP addresses.

---

The `subnet` block supports the following:

* `id` - (Optional) Resource ID.

* `address_prefix` - (Optional) The address prefix for the subnet.

* `address_prefixes` - (Optional) List of  address prefixes for the subnet.

* `network_security_group` - (Optional) One `network_security_group` block defined below.

* `route_table` - (Optional) One `route_table` block defined below.

* `service_endpoints` - (Optional) One or more `service_endpoint` block defined below.

* `service_endpoint_policies` - (Optional) One or more `service_endpoint_policy` block defined below.

* `resource_navigation_links` - (Optional) One or more `resource_navigation_link` block defined below.

* `service_association_links` - (Optional) One or more `service_association_link` block defined below.

* `delegations` - (Optional) One or more `delegation` block defined below.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `network_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `route_table` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated.

---

The `service_endpoint` block supports the following:

* `service` - (Optional) The type of the endpoint service.

* `locations` - (Optional) A list of locations.

---

The `service_endpoint_policy` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `resource_navigation_link` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

---

The `service_association_link` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

---

The `delegation` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a subnet. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `virtual_network_peering` block supports the following:

* `id` - (Optional) Resource ID.

* `allow_virtual_network_access` - (Optional) Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.

* `allow_forwarded_traffic` - (Optional) Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.

* `allow_gateway_transit` - (Optional) If gateway links can be used in remote virtual networking to link to this virtual network.

* `use_remote_gateways` - (Optional) If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.

* `remote_virtual_network` - (Optional) One `remote_virtual_network` block defined below.

* `remote_address_space` - (Optional) One `remote_address_space` block defined below.

* `peering_state` - (Optional) The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'. Defaults to `Initiated`.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `remote_virtual_network` block supports the following:

* `id` - (Optional) Resource ID.

---

The `remote_address_space` block supports the following:

* `address_prefixes` - (Optional) A list of address blocks reserved for this virtual network in CIDR notation.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `name` - Resource name.

* `type` - Resource type.
