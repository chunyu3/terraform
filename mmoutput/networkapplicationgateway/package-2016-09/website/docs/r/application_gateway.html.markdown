---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_application_gateway"
sidebar_current: "docs-azurerm-resource-application-gateway"
description: |-
  Manage Azure ApplicationGateway instance.
---

# azurerm_application_gateway

Manage Azure ApplicationGateway instance.


## Argument Reference

The following arguments are supported:

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `application_gateway_name` - (Required) The name of the application gateway. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `authentication_certificates` - (Optional) One or more `authentication_certificate` block defined below.

* `backend_address_pools` - (Optional) One or more `backend_address_pool` block defined below.

* `backend_http_settings_collection` - (Optional) One or more `backend_http_settings_collection` block defined below.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated. Changing this forces a new resource to be created.

* `frontend_ipconfigurations` - (Optional) One or more `frontend_ipconfiguration` block defined below.

* `frontend_ports` - (Optional) One or more `frontend_port` block defined below.

* `gateway_ipconfigurations` - (Optional) One or more `gateway_ipconfiguration` block defined below.

* `http_listeners` - (Optional) One or more `http_listener` block defined below.

* `probes` - (Optional) One or more `probe` block defined below.

* `request_routing_rules` - (Optional) One or more `request_routing_rule` block defined below.

* `resource_guid` - (Optional) Resource GUID property of the application gateway resource.

* `sku` - (Optional) One `sku` block defined below.

* `ssl_certificates` - (Optional) One or more `ssl_certificate` block defined below.

* `ssl_policy` - (Optional) One `ssl_policy` block defined below.

* `url_path_maps` - (Optional) One or more `url_path_map` block defined below.

* `web_application_firewall_configuration` - (Optional) One `web_application_firewall_configuration` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `authentication_certificate` block supports the following:

* `id` - (Optional) Resource ID.

* `data` - (Optional) Certificate public data.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `backend_address_pool` block supports the following:

* `id` - (Optional) Resource ID.

* `backend_ipconfigurations` - (Optional) One or more `backend_ipconfiguration` block defined below.

* `backend_addresses` - (Optional) One or more `backend_address` block defined below.

* `name` - (Optional) Resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `backend_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `backend_address` block supports the following:

* `fqdn` - (Optional) Fully qualified domain name (FQDN).

* `ip_address` - (Optional) IP address

---

The `backend_http_settings_collection` block supports the following:

* `id` - (Optional) Resource ID.

* `port` - (Optional) Port

* `protocol` - (Optional) Protocol. Possible values are: 'Http' and 'Https'. Defaults to `Http`.

* `cookie_based_affinity` - (Optional) Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'. Defaults to `Enabled`.

* `request_timeout` - (Optional) Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.

* `probe` - (Optional) One `probe` block defined below.

* `authentication_certificates` - (Optional) One or more `authentication_certificate` block defined below.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `probe` block supports the following:

* `id` - (Optional) Resource ID.

---

The `authentication_certificate` block supports the following:

* `id` - (Optional) Resource ID.

---

The `frontend_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

* `private_ip_address` - (Optional) PrivateIPAddress of the network interface IP Configuration.

* `private_ipallocation_method` - (Optional) PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'. Defaults to `Static`.

* `subnet` - (Optional) One `subnet` block defined below.

* `public_ip_address` - (Optional) One `public_ip_address` block defined below.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `subnet` block supports the following:

* `id` - (Optional) Resource ID.

---

The `public_ip_address` block supports the following:

* `id` - (Optional) Resource ID.

---

The `frontend_port` block supports the following:

* `id` - (Optional) Resource ID.

* `port` - (Optional) Frontend port

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `gateway_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

* `subnet` - (Optional) One `subnet` block defined below.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `subnet` block supports the following:

* `id` - (Optional) Resource ID.

---

The `http_listener` block supports the following:

* `id` - (Optional) Resource ID.

* `frontend_ipconfiguration` - (Optional) One `frontend_ipconfiguration` block defined below.

* `frontend_port` - (Optional) One `frontend_port` block defined below.

* `protocol` - (Optional) Protocol. Possible values are: 'Http' and 'Https'. Defaults to `Http`.

* `host_name` - (Optional) Host name of HTTP listener.

* `ssl_certificate` - (Optional) One `ssl_certificate` block defined below.

* `require_server_name_indication` - (Optional) Applicable only if protocol is https. Enables SNI for multi-hosting.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `frontend_ipconfiguration` block supports the following:

* `id` - (Optional) Resource ID.

---

The `frontend_port` block supports the following:

* `id` - (Optional) Resource ID.

---

The `ssl_certificate` block supports the following:

* `id` - (Optional) Resource ID.

---

The `probe` block supports the following:

* `id` - (Optional) Resource ID.

* `protocol` - (Optional) Protocol. Possible values are: 'Http' and 'Https'. Defaults to `Http`.

* `host` - (Optional) Host name to send the probe to.

* `path` - (Optional) Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>

* `interval` - (Optional) The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.

* `timeout` - (Optional) the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.

* `unhealthy_threshold` - (Optional) The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `request_routing_rule` block supports the following:

* `id` - (Optional) Resource ID.

* `rule_type` - (Optional) Rule type. Possible values are: 'Basic' and 'PathBasedRouting'. Defaults to `Basic`.

* `backend_address_pool` - (Optional) One `backend_address_pool` block defined below.

* `backend_http_settings` - (Optional) One `backend_http_setting` block defined below.

* `http_listener` - (Optional) One `http_listener` block defined below.

* `url_path_map` - (Optional) One `url_path_map` block defined below.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `backend_address_pool` block supports the following:

* `id` - (Optional) Resource ID.

---

The `backend_http_setting` block supports the following:

* `id` - (Optional) Resource ID.

---

The `http_listener` block supports the following:

* `id` - (Optional) Resource ID.

---

The `url_path_map` block supports the following:

* `id` - (Optional) Resource ID.

---

The `sku` block supports the following:

* `name` - (Optional) Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'. Defaults to `Standard_Small`.

* `tier` - (Optional) Tier of an application gateway. Possible values are: 'Standard' and 'WAF'. Defaults to `Standard`.

* `capacity` - (Optional) Capacity (instance count) of an application gateway.

---

The `ssl_certificate` block supports the following:

* `id` - (Optional) Resource ID.

* `data` - (Optional) Base-64 encoded pfx certificate. Only applicable in PUT Request.

* `password` - (Optional) Password for the pfx file specified in data. Only applicable in PUT request.

* `public_cert_data` - (Optional) Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `ssl_policy` block supports the following:

* `disabled_ssl_protocols` - (Optional) SSL protocols to be disabled on application gateway. Possible values are: 'TLSv1_0', 'TLSv1_1', and 'TLSv1_2'.

---

The `url_path_map` block supports the following:

* `id` - (Optional) Resource ID.

* `default_backend_address_pool` - (Optional) One `default_backend_address_pool` block defined below.

* `default_backend_http_settings` - (Optional) One `default_backend_http_setting` block defined below.

* `path_rules` - (Optional) One or more `path_rule` block defined below.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `default_backend_address_pool` block supports the following:

* `id` - (Optional) Resource ID.

---

The `default_backend_http_setting` block supports the following:

* `id` - (Optional) Resource ID.

---

The `path_rule` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `web_application_firewall_configuration` block supports the following:

* `enabled` - (Required) Whether the web application firewall is enabled.

* `firewall_mode` - (Optional) Web application firewall mode. Possible values are: 'Detection' and 'Prevention'. Defaults to `Detection`.

## Attributes Reference

The following attributes are exported:

* `operational_state` - Operational state of the application gateway resource. Possible values are: 'Stopped', 'Started', 'Running', and 'Stopping'.

* `provisioning_state` - Provisioning state of the application gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `name` - Resource name.

* `type` - Resource type.
