---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_azure_firewall"
sidebar_current: "docs-azurerm-resource-azure-firewall"
description: |-
  Manage Azure AzureFirewall instance.
---

# azurerm_azure_firewall

Manage Azure AzureFirewall instance.


## Argument Reference

The following arguments are supported:

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `azure_firewall_name` - (Required) The name of the Azure Firewall. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `application_rule_collections` - (Optional) One or more `application_rule_collection` block defined below.

* `ip_configurations` - (Optional) One or more `ip_configuration` block defined below.

* `nat_rule_collections` - (Optional) One or more `nat_rule_collection` block defined below.

* `network_rule_collections` - (Optional) One or more `network_rule_collection` block defined below.

* `threat_intel_mode` - (Optional) The operation mode for Threat Intelligence. Defaults to `Alert`.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `application_rule_collection` block supports the following:

* `id` - (Optional) Resource ID.

* `priority` - (Optional) Priority of the application rule collection resource.

* `action` - (Optional) One `action` block defined below.

* `rules` - (Optional) One or more `rule` block defined below.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource.


---

The `action` block supports the following:

* `type` - (Optional) The type of action. Defaults to `Allow`.

---

The `rule` block supports the following:

* `name` - (Optional) Name of the application rule.

* `description` - (Optional) Description of the rule.

* `source_addresses` - (Optional) List of source IP addresses for this rule.

* `target_fqdns` - (Optional) List of FQDNs for this rule.

* `fqdn_tags` - (Optional) List of FQDN Tags for this rule.

---

The `ip_configuration` block supports the following:

* `id` - (Optional) Resource ID.

* `subnet` - (Optional) One `subnet` block defined below.

* `public_ip_address` - (Optional) One `public_ip_address` block defined below.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.


---

The `subnet` block supports the following:

* `id` - (Optional) Resource ID.

---

The `public_ip_address` block supports the following:

* `id` - (Optional) Resource ID.

---

The `nat_rule_collection` block supports the following:

* `id` - (Optional) Resource ID.

* `priority` - (Optional) Priority of the NAT rule collection resource.

* `action` - (Optional) One `action` block defined below.

* `rules` - (Optional) One or more `rule` block defined below.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource.


---

The `action` block supports the following:

* `type` - (Optional) The type of action. Defaults to `Snat`.

---

The `rule` block supports the following:

* `name` - (Optional) Name of the NAT rule.

* `description` - (Optional) Description of the rule.

* `source_addresses` - (Optional) List of source IP addresses for this rule.

* `destination_addresses` - (Optional) List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.

* `destination_ports` - (Optional) List of destination ports.

* `protocols` - (Optional) Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.

* `translated_address` - (Optional) The translated address for this NAT rule.

* `translated_port` - (Optional) The translated port for this NAT rule.

---

The `network_rule_collection` block supports the following:

* `id` - (Optional) Resource ID.

* `priority` - (Optional) Priority of the network rule collection resource.

* `action` - (Optional) One `action` block defined below.

* `rules` - (Optional) One or more `rule` block defined below.

* `name` - (Optional) Gets name of the resource that is unique within a resource group. This name can be used to access the resource.


---

The `action` block supports the following:

* `type` - (Optional) The type of action. Defaults to `Allow`.

---

The `rule` block supports the following:

* `name` - (Optional) Name of the network rule.

* `description` - (Optional) Description of the rule.

* `protocols` - (Optional) Array of AzureFirewallNetworkRuleProtocols.

* `source_addresses` - (Optional) List of source IP addresses for this rule.

* `destination_addresses` - (Optional) List of destination IP addresses.

* `destination_ports` - (Optional) List of destination ports.

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - The provisioning state of the resource.

* `name` - Resource name.

* `type` - Resource type.

* `etag` - Gets a unique read-only string that changes whenever the resource is updated.
