---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_attestation_provider"
sidebar_current: "docs-azurerm-resource-attestation-provider"
description: |-
  Manage Azure AttestationProvider instance.
---

# azurerm_attestation_provider

Manage Azure AttestationProvider instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) Name of the attestation service Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. The name is case insensitive. Changing this forces a new resource to be created.

* `attestation_policy` - (Optional) Name of attestation policy. Changing this forces a new resource to be created.

* `policy_signing_certificates` - (Optional) One `policy_signing_certificate` block defined below.

---

The `policy_signing_certificate` block supports the following:

* `keys` - (Optional) One or more `key` block defined below.


---

The `key` block supports the following:

* `alg` - (Required) The "alg" (algorithm) parameter identifies the algorithm intended for<br>use with the key.  The values used should either be registered in the<br>IANA "JSON Web Signature and Encryption Algorithms" registry<br>established by [JWA] or be a value that contains a Collision-<br>Resistant Name.

* `crv` - (Optional) The "crv" (curve) parameter identifies the curve type

* `d` - (Optional) RSA private exponent or ECC private key

* `dp` - (Optional) RSA Private Key Parameter

* `dq` - (Optional) RSA Private Key Parameter

* `e` - (Optional) RSA public exponent, in Base64

* `k` - (Optional) Symmetric key

* `kid` - (Required) The "kid" (key ID) parameter is used to match a specific key.  This<br>is used, for instance, to choose among a set of keys within a JWK Set<br>during key rollover.  The structure of the "kid" value is<br>unspecified.  When "kid" values are used within a JWK Set, different<br>keys within the JWK Set SHOULD use distinct "kid" values.  (One<br>example in which different keys might use the same "kid" value is if<br>they have different "kty" (key type) values but are considered to be<br>equivalent alternatives by the application using them.)  The "kid"<br>value is a case-sensitive string.

* `kty` - (Required) The "kty" (key type) parameter identifies the cryptographic algorithm<br>family used with the key, such as "RSA" or "EC". "kty" values should<br>either be registered in the IANA "JSON Web Key Types" registry<br>established by [JWA] or be a value that contains a Collision-<br>Resistant Name.  The "kty" value is a case-sensitive string.

* `n` - (Optional) RSA modulus, in Base64

* `p` - (Optional) RSA secret prime

* `q` - (Optional) RSA secret prime, with p < q

* `qi` - (Optional) RSA Private Key Parameter

* `use` - (Required) Use ("public key use") identifies the intended use of<br>the public key. The "use" parameter is employed to indicate whether<br>a public key is used for encrypting data or verifying the signature<br>on data. Values are commonly "sig" (signature) or "enc" (encryption).

* `x` - (Optional) X coordinate for the Elliptic Curve point

* `x5c` - (Optional) The "x5c" (X.509 certificate chain) parameter contains a chain of one<br>or more PKIX certificates [RFC5280].  The certificate chain is<br>represented as a JSON array of certificate value strings.  Each<br>string in the array is a base64-encoded (Section 4 of [RFC4648] --<br>not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.<br>The PKIX certificate containing the key value MUST be the first<br>certificate.

* `y` - (Optional) Y coordinate for the Elliptic Curve point

## Attributes Reference

The following attributes are exported:

* `id` - Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}

* `name` - The name of the resource

* `type` - The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.

* `status` - Status of attestation service.

* `attest_uri` - Gets the uri of attestation service
