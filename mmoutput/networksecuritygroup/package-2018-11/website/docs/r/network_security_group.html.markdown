---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_security_group"
sidebar_current: "docs-azurerm-resource-network-security-group"
description: |-
  Manage Azure NetworkSecurityGroup instance.
---

# azurerm_network_security_group

Manage Azure NetworkSecurityGroup instance.


## Argument Reference

The following arguments are supported:

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `network_security_group_name` - (Required) The name of the network security group. Changing this forces a new resource to be created.

* `id` - (Optional) Resource ID. Changing this forces a new resource to be created.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `default_security_rules` - (Optional) One or more `default_security_rule` block defined below.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated. Changing this forces a new resource to be created.

* `resource_guid` - (Optional) The resource GUID property of the network security group resource.

* `security_rules` - (Optional) One or more `security_rule` block defined below.

* `tags` - (Optional) Resource tags. Changing this forces a new resource to be created.

---

The `default_security_rule` block supports the following:

* `id` - (Optional) Resource ID.

* `description` - (Optional) A description for this rule. Restricted to 140 chars.

* `protocol` - (Required) Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.

* `source_port_range` - (Optional) The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.

* `destination_port_range` - (Optional) The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.

* `source_address_prefix` - (Optional) The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.

* `source_address_prefixes` - (Optional) The CIDR or source IP ranges.

* `source_application_security_groups` - (Optional) One or more `source_application_security_group` block defined below.

* `destination_address_prefix` - (Optional) The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.

* `destination_address_prefixes` - (Optional) The destination address prefixes. CIDR or destination IP ranges.

* `destination_application_security_groups` - (Optional) One or more `destination_application_security_group` block defined below.

* `source_port_ranges` - (Optional) The source port ranges.

* `destination_port_ranges` - (Optional) The destination port ranges.

* `access` - (Required) The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.

* `priority` - (Optional) The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.

* `direction` - (Required) The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `source_application_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

---

The `destination_application_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

---

The `security_rule` block supports the following:

* `id` - (Optional) Resource ID.

* `description` - (Optional) A description for this rule. Restricted to 140 chars.

* `protocol` - (Required) Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.

* `source_port_range` - (Optional) The source port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.

* `destination_port_range` - (Optional) The destination port or range. Integer or range between 0 and 65535. Asterisks '*' can also be used to match all ports.

* `source_address_prefix` - (Optional) The CIDR or source IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.

* `source_address_prefixes` - (Optional) The CIDR or source IP ranges.

* `source_application_security_groups` - (Optional) One or more `source_application_security_group` block defined below.

* `destination_address_prefix` - (Optional) The destination address prefix. CIDR or destination IP range. Asterisks '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.

* `destination_address_prefixes` - (Optional) The destination address prefixes. CIDR or destination IP ranges.

* `destination_application_security_groups` - (Optional) One or more `destination_application_security_group` block defined below.

* `source_port_ranges` - (Optional) The source port ranges.

* `destination_port_ranges` - (Optional) The destination port ranges.

* `access` - (Required) The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.

* `priority` - (Optional) The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.

* `direction` - (Required) The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `source_application_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

---

The `destination_application_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

## Attributes Reference

The following attributes are exported:

* `network_interfaces` - One or more `network_interface` block defined below.

* `subnets` - One or more `subnet` block defined below.

* `provisioning_state` - The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `name` - Resource name.

* `type` - Resource type.


---

The `network_interface` block contains the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `virtual_machine` - (Optional) One `virtual_machine` block defined below.

* `network_security_group` - (Optional) One `network_security_group` block defined below.

* `interface_endpoint` - (Optional) One `interface_endpoint` block defined below.

* `ip_configurations` - (Optional) One or more `ip_configuration` block defined below.

* `tap_configurations` - (Optional) One or more `tap_configuration` block defined below.

* `dns_settings` - (Optional) One `dns_setting` block defined below.

* `mac_address` - (Optional) The MAC address of the network interface.

* `primary` - (Optional) Gets whether this is a primary network interface on a virtual machine.

* `enable_accelerated_networking` - (Optional) If the network interface is accelerated networking enabled.

* `enable_ipforwarding` - (Optional) Indicates whether IP forwarding is enabled on this network interface.

* `hosted_workloads` - (Optional) A list of references to linked BareMetal resources

* `resource_guid` - (Optional) The resource GUID property of the network interface resource.

* `provisioning_state` - (Optional) The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `virtual_machine` block supports the following:

* `id` - (Optional) Resource ID.

---

The `network_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `interface_endpoint` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated.

---

The `ip_configuration` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `tap_configuration` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

* `type` - (Optional) Sub Resource type.

---

The `dns_setting` block supports the following:

* `dns_servers` - (Optional) List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.

* `applied_dns_servers` - (Optional) If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.

* `internal_dns_name_label` - (Optional) Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.

* `internal_fqdn` - (Optional) Fully qualified DNS name supporting internal communications between VMs in the same virtual network.

* `internal_domain_name_suffix` - (Optional) Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.

---

The `subnet` block contains the following:

* `id` - (Optional) Resource ID.

* `address_prefix` - (Optional) The address prefix for the subnet.

* `address_prefixes` - (Optional) List of  address prefixes for the subnet.

* `network_security_group` - (Optional) One `network_security_group` block defined below.

* `route_table` - (Optional) One `route_table` block defined below.

* `service_endpoints` - (Optional) One or more `service_endpoint` block defined below.

* `service_endpoint_policies` - (Optional) One or more `service_endpoint_policy` block defined below.

* `interface_endpoints` - (Optional) One or more `interface_endpoint` block defined below.

* `ip_configurations` - (Optional) One or more `ip_configuration` block defined below.

* `ip_configuration_profiles` - (Optional) One or more `ip_configuration_profile` block defined below.

* `resource_navigation_links` - (Optional) One or more `resource_navigation_link` block defined below.

* `service_association_links` - (Optional) One or more `service_association_link` block defined below.

* `delegations` - (Optional) One or more `delegation` block defined below.

* `purpose` - (Optional) A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.

* `provisioning_state` - (Optional) The provisioning state of the resource.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.


---

The `network_security_group` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `route_table` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated.

---

The `service_endpoint` block supports the following:

* `service` - (Optional) The type of the endpoint service.

* `locations` - (Optional) A list of locations.

* `provisioning_state` - (Optional) The provisioning state of the resource.

---

The `service_endpoint_policy` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `interface_endpoint` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Resource name.

* `type` - (Optional) Resource type.

* `location` - (Optional) Resource location. Changing this forces a new resource to be created.

* `tags` - (Optional) Resource tags.

* `etag` - (Optional) Gets a unique read-only string that changes whenever the resource is updated.

---

The `ip_configuration` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `ip_configuration_profile` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource. This name can be used to access the resource.

* `type` - (Optional) Sub Resource type.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `resource_navigation_link` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `service_association_link` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) Name of the resource that is unique within a resource group. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.

---

The `delegation` block supports the following:

* `id` - (Optional) Resource ID.

* `name` - (Optional) The name of the resource that is unique within a subnet. This name can be used to access the resource.

* `etag` - (Optional) A unique read-only string that changes whenever the resource is updated.
