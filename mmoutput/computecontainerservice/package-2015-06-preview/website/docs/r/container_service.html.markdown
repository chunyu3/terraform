---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://github.com/Azure/magic-module-specs
#
# ----------------------------------------------------------------------------
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_container_service"
sidebar_current: "docs-azurerm-resource-container-service"
description: |-
  Manage Azure ContainerService instance.
---

# azurerm_container_service

Manage Azure ContainerService instance.


## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the container service within the given subscription and resource group. Changing this forces a new resource to be created.

* `resource_group` - (Required) The name of the resource group. Changing this forces a new resource to be created.

* `location` - (Required) Resource location Changing this forces a new resource to be created.

* `agent_pool_profiles` - (Required) One or more `agent_pool_profile` block defined below.

* `linux_profile` - (Required) One `linux_profile` block defined below.

* `master_profile` - (Required) One `master_profile` block defined below.

---

The `agent_pool_profile` block supports the following:

* `name` - (Required) Unique name of the agent pool profile within the context of the subscription and resource group

* `count` - (Optional) No. of agents (VMs) that will host docker containers

* `vm_size` - (Optional) Size of agent VMs Defaults to `Standard_A0`.

* `dns_prefix` - (Required) DNS prefix to be used to create FQDN for this agent pool

---

The `linux_profile` block supports the following:

* `admin_username` - (Required) The administrator username to use for all Linux VMs

* `ssh` - (Required) One `ssh` block defined below.


---

The `ssh` block supports the following:

* `public_keys` - (Optional) One or more `public_key` block defined below.


---

The `public_key` block supports the following:

* `key_data` - (Required) Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.

---

The `master_profile` block supports the following:

* `count` - (Optional) Number of masters (VMs) in the container cluster

* `dns_prefix` - (Required) DNS prefix to be used to create FQDN for master

* `diagnostics_profile` - (Optional) One `diagnostics_profile` block defined below.

* `orchestrator_profile` - (Optional) One `orchestrator_profile` block defined below.

* `windows_profile` - (Optional) One `windows_profile` block defined below.

* `tags` - (Optional) Resource tags Changing this forces a new resource to be created.

---

The `diagnostics_profile` block supports the following:

* `vm_diagnostics` - (Optional) One `vm_diagnostic` block defined below.


---

The `vm_diagnostic` block supports the following:

* `enabled` - (Optional) Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.

---

The `orchestrator_profile` block supports the following:

* `orchestrator_type` - (Optional) Specifies what orchestrator will be used to manage container cluster resources. Defaults to `Mesos`.

---

The `windows_profile` block supports the following:

* `admin_username` - (Required) The administrator username to use for Windows jumpbox

* `admin_password` - (Required) The administrator password to use for Windows jumpbox

## Attributes Reference

The following attributes are exported:

* `provisioning_state` - Gets the provisioning state, which only appears in the response.

* `id` - Resource Id

* `name` - Resource name

* `type` - Resource type
